{
    "name": "DigitalMarketplace",
    "structs": {
        "Sale": [
            {
                "name": "amount",
                "type": "uint64"
            },
            {
                "name": "cost",
                "type": "uint64"
            },
            {
                "name": "bid",
                "type": "(address,uint64)[]"
            }
        ],
        "SaleKey": [
            {
                "name": "owner",
                "type": "address"
            },
            {
                "name": "asset",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "deposit",
            "args": [
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "sponsor_asset",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "open_sale",
            "args": [
                {
                    "type": "axfer",
                    "name": "asset_deposit"
                },
                {
                    "type": "uint64",
                    "name": "cost"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "close_sale",
            "args": [
                {
                    "type": "(address,uint64)",
                    "struct": "SaleKey",
                    "name": "sale_key"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "buy",
            "args": [
                {
                    "type": "(address,uint64)",
                    "struct": "SaleKey",
                    "name": "sale_key"
                },
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 1,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {
                "deposited": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZGVwb3NpdGVk"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "sales": {
                    "keyType": "SaleKey",
                    "valueType": "Sale",
                    "prefix": "c2FsZXM="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        358,
                        444,
                        459
                    ],
                    "errorMessage": "Index access is out of bounds"
                },
                {
                    "pc": [
                        80,
                        123,
                        148
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        108,
                        169
                    ],
                    "errorMessage": "OnCompletion is not one of NoOp, OptIn"
                },
                {
                    "pc": [
                        196
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        83,
                        111,
                        126,
                        151,
                        172
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        259,
                        311,
                        466
                    ],
                    "errorMessage": "check self.deposited exists for account"
                },
                {
                    "pc": [
                        397,
                        443,
                        484
                    ],
                    "errorMessage": "check self.sales entry exists"
                },
                {
                    "pc": [
                        136
                    ],
                    "errorMessage": "transaction type is axfer"
                },
                {
                    "pc": [
                        96,
                        182
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiAFAAEEA9TbAiYCCWRlcG9zaXRlZAVzYWxlczEbQQCbggUENiXk6wQTAAqUBKaSAGYEdeSAYwQiF0pzNhoAjgUAWABGAC0AGwACIkMxGRREMRhENhoBMRYjCUk4ECMSRIgBPiNDIzEZkCUaRDEYRDYaAYgA6yNDMRkURDEYRDEWIwlJOBAkEkQ2GgGIAI8jQzEZFEQxGEQ2GgEXwDCIAE8jQyMxGZAlGkQxGEQxFiMJSTgQIxJEiAANI0MxGUD/ijEYFEQjQ4oBAIv/OAAxABJEi/84BzIKEkQxACIoYyJOAk2L/zgIMQBOAggoTGaJigEAMgqL/3AARQEURDEASSIoY0QyEAkoTGaxMgoishKyFIv/shEkshAisgGziYoCAIv+OAAxABJEi/44FDIKEkQxAEkiKGNEIQQJKExmi/44EhaL/1CAAgASUIACAABQMQCL/jgRFlApTFBJvEhMv4mKAQCL/1cAIDEAEkQxACIoYyJOAk0xAEwhBAgoTGaxi/+BIFsxACmL/1BJvkQiW7ISTLIUTLIRJLIQIrIBs7xIiYoCAIv/OAAxABJEi/84BzIKEkQpi/5QSb5EVwgIi/84CEkWTwKoRIv+VwAgSSIoY0RPAggoTGaxi/6BIFsxAEsCvkQiW7ISshSyESSyECKyAbO8SIk=",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}