{
    "name": "DigitalMarketplace",
    "structs": {
        "Sale": [
            {
                "name": "cost",
                "type": "uint64"
            },
            {
                "name": "bid",
                "type": "(address,uint64)[]"
            }
        ],
        "SaleKey": [
            {
                "name": "owner",
                "type": "address"
            },
            {
                "name": "asset",
                "type": "uint64"
            }
        ]
    },
    "methods": [
        {
            "name": "deposit",
            "args": [
                {
                    "type": "pay",
                    "name": "payment"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp",
                    "OptIn"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "sponsor_asset",
            "args": [
                {
                    "type": "asset",
                    "name": "asset"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        },
        {
            "name": "open_sale",
            "args": [
                {
                    "type": "axfer",
                    "name": "asset_deposit"
                },
                {
                    "type": "uint64",
                    "name": "cost"
                }
            ],
            "returns": {
                "type": "void"
            },
            "actions": {
                "create": [],
                "call": [
                    "NoOp"
                ]
            },
            "readonly": false,
            "events": [],
            "recommendations": {}
        }
    ],
    "arcs": [
        22,
        28
    ],
    "networks": {},
    "state": {
        "schema": {
            "global": {
                "ints": 0,
                "bytes": 0
            },
            "local": {
                "ints": 1,
                "bytes": 0
            }
        },
        "keys": {
            "global": {},
            "local": {
                "deposited": {
                    "keyType": "AVMString",
                    "valueType": "AVMUint64",
                    "key": "ZGVwb3NpdGVk"
                }
            },
            "box": {}
        },
        "maps": {
            "global": {},
            "local": {},
            "box": {
                "sales": {
                    "keyType": "SaleKey",
                    "valueType": "Sale",
                    "prefix": "c2FsZXM="
                }
            }
        }
    },
    "bareActions": {
        "create": [
            "NoOp"
        ],
        "call": []
    },
    "sourceInfo": {
        "approval": {
            "sourceInfo": [
                {
                    "pc": [
                        56,
                        81
                    ],
                    "errorMessage": "OnCompletion is not NoOp"
                },
                {
                    "pc": [
                        103
                    ],
                    "errorMessage": "OnCompletion is not one of NoOp, OptIn"
                },
                {
                    "pc": [
                        130
                    ],
                    "errorMessage": "can only call when creating"
                },
                {
                    "pc": [
                        59,
                        84,
                        106
                    ],
                    "errorMessage": "can only call when not creating"
                },
                {
                    "pc": [
                        193
                    ],
                    "errorMessage": "check self.deposited exists for account"
                },
                {
                    "pc": [
                        69
                    ],
                    "errorMessage": "transaction type is axfer"
                },
                {
                    "pc": [
                        116
                    ],
                    "errorMessage": "transaction type is pay"
                }
            ],
            "pcOffsetMethod": "none"
        },
        "clear": {
            "sourceInfo": [],
            "pcOffsetMethod": "none"
        }
    },
    "source": {
        "approval": "",
        "clear": "I3ByYWdtYSB2ZXJzaW9uIDEwCiNwcmFnbWEgdHlwZXRyYWNrIGZhbHNlCgovLyBhbGdvcHkuYXJjNC5BUkM0Q29udHJhY3QuY2xlYXJfc3RhdGVfcHJvZ3JhbSgpIC0+IHVpbnQ2NDoKbWFpbjoKICAgIHB1c2hpbnQgMSAvLyAxCiAgICByZXR1cm4K"
    },
    "byteCode": {
        "approval": "CiADAQAEJgEJZGVwb3NpdGVkMRtBAGOCAwQ2JeTrBBMACpQEppIAZjYaAI4DAC0AGwACI0MxGRREMRhEMRYiCUk4ECQSRDYaAYgAkCJDMRkURDEYRDYaARfAMIgAUCJDIjEZkIEDGkQxGEQxFiIJSTgQIhJEiAANIkMxGUD/tDEYFEQiQ4oBAIv/OAAxABJEi/84BzIKEkQxACMoYyNOAk2L/zgIMQBOAggoTGaJigEAMgqL/3AARQEURDEASSMoY0QyEAkoTGaxMgojshKyFIv/shEkshAjsgGziYoCAIv+OAAxABJEi/44FDIKEkSL/4ACAApQgAIAAFAxAIv+OBEWUIAFc2FsZXNMUEm8SEy/iQ==",
        "clear": "CoEBQw=="
    },
    "compilerInfo": {
        "compiler": "puya",
        "compilerVersion": {
            "major": 4,
            "minor": 4,
            "patch": 0
        }
    },
    "events": [],
    "templateVariables": {}
}