{
  "version": 3,
  "sources": [
    "../../digital_marketplace/contract.py",
    "../../digital_marketplace/subroutines.py"
  ],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAwDA;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;;;AAAA;;;;;;;;;;;;;;;;;;;;;;AAAA;;AAiLK;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAjLL;;;AAiLK;;;AAAA;;AAhBA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;;;;;AAAA;AAAA;AAAA;AAAA;;AAnBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;;AAAA;;AA7CA;;AAAA;AAAA;AAAA;;AAAA;AAjGL;;;AAAA;;;AAiGK;;;AAAA;;AAjBA;;AAAA;AAAA;AAAA;;AAAA;AAhFL;;;AAgFK;;;AAAA;;AAhBA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAhEL;;;AAAA;AAAA;;AAgEK;;;AAAA;;AApBA;;AAAA;AAAA;AAAA;;AAAA;AA5CL;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAAA;AAAA;;;AA4CK;;;AAAA;;AAfA;;AAAA;AAAA;AAAA;;AAAA;AA7BL;;;AAAA;AAAA;;AA6BK;;;AAAA;;AAXA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAlBL;;;AAkBK;;;AAAA;;AAXA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAPL;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAOK;;;AAAA;;AAPL;;AAAA;;;;;;;;;ACnDA;;;AAKQ;;AAEA;;AAFA;AAEK;;AAFL;AAMA;;AANA;AAQA;;AARA;AAQI;;AARJ;AAUA;;AAVA;AAYC;;AAZD;AAFW;;;AAAA;AAAR;;;AAAA;AAAP;ADuDJ;;;AAEe;;AAAA;;AAAkB;;AAAlB;AAAP;AAEI;;AAAA;;AAAoB;;AAApB;AADJ;AAKuB;;AAAnB;AAAA;AAAA;AAAuC;AAAvC;;AAAA;AAAoD;;AAAA;;AADzC;;AACX;;AAAA;AADJ;AAAA;AAAA;;AAIR;;;AAEW;;AAAX;;;AAC2B;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAAA;AAA9B;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAEA;AAAsB;;;;;;AAAtB;;;AAAA;;;AAAA;;AAEA;AACa;;AAAkC;AAAf;AAAA;AAAA;AAAA;;;;;AADhC;;;AAAA;;;AAAA;;AAIZ;;;AAEmB;;AAAA;;AAAA;;AAAA;;AAAJ;AAAP;AAGO;;AAAA;;AAAA;AAAkB;;AAAlB;AAAP;AAEe;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAA9B;AAAA;AAAA;AAAA;AAEA;AAEmB;;AACF;;;;;;;;;AAHjB;;;;AAAA;;;AAAA;;AAMR;;;AAIe;;AAAA;;AAAwB;;AAAxB;AAAP;AAEI;;AAAA;;AAAgC;;AAAhC;AADJ;AAKiB;;AAAyB;;AAAA;;AAAZ;AADnB;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAJ;AAAP;AAEe;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA4C;;AAAd;;;AAA9B;AAAA;AAAA;AAAA;AAGgB;;AAAA;;AAAZ;AADmB;;AAAA;AAAA;;;;AAAA;AAC4B;AAD5B;AAAvB;;AAAA;;AAAA;;AAIR;;;AAEwC;;AAAa;;AAAA;AAAlC;AAEX;AAEmB;;AACF;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAOI;;AADyB;AAAA;AAAA;AACL;AADK;;AAAA;AAEX;;AAAd;;;AAFW;;AAAc;;AAAA;AAA7B;AAAA;AAAA;AAIA;;;AAER;;;AAEe;;AAAc;;AAAA;;;AAAd;AAAA;;AAAA;AAAP;AAEe;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAA9B;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AACA;;AAAA;AAAA;AAAA;AAAA;AAAyC;;AAAA;AAAA;AAAA;;AAAA;AAEX;;AAAd;;;AAFyB;AAAzC;AAAA;;AAAA;AAAA;;AAAA;AAIA;AACe;;AAAA;;AAAA;AACI;;AACF;;AAAA;AAAA;AAAA;AAAA;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAMA;;;AAER;;;;;;;;;;AAEmC;;AAA3B;;AACU;;AAAA;AAAA;AAEY;;AAAA;;;AAAf;AAAP;AAEiB;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AACd;AAAA;AAAX;;;AAEgB;;AAAA;;;AAAA;;AAAA;AAAkC;;AAAA;AAAlC;AADJ;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;AAIc;;AAAA;;AAAA;AAAA;;AACf;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAX;;;AAEgB;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;ACjII;AAAA;AAAA;;AAAP;AAAL;;AAAK;;AAAA;;AAAA;AAAb;;;AACW;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAX;;;AACmB;;;;;ADiInB;;;AAC+B;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAA9B;;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAGA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AASO;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAAA;AAA9B;AAAA;AAAA;AAAA;;AAPQ;;AAAA;AAAA;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;ACzIH;;AAAA;AAAA;AAAA;;;;;AAGF;AAAO;;;AD6HS;;;AAWA;;AAAf;AAAA;AAAA;AAAA;AAAA;AC1JD;;AD0JC;AAAA;AAAA;AAAA;AACiC;;;;AAAA;;AAAA;AAAjC;;AAAA;AAAA;;AAAA;AAAA;;;;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;;AAAA;;AAAA;;;;AAsBZ;;;AAG6B;;AAAA;;;AAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;;;AACS;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAL;AAAA;AADJ;;;AAEI;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;;AAAA;;;AAA0D;;AAA1D;AAFJ;;;;AADJ;;AAAA;;AAAA;;;;;AAMR;;;AAEwD;;AAAnB;AAAA;AAAA;AAA+B;AAA/B;;AAAA;AAAd;;AAAf;AAAA;;AAAA;AAEe;AAA+B;;AAA/B;AAAA;AAAA;AAAA;AAAA;;AAAA;AACW;AAAA;AAEV;AAAA;AAAP;AAAA;;AAAA;;AAAA;AAAjB;;;AACkC;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAnB;;;AAAA;AAAf;;;AACgB;;AAAA;;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;;AAAA;AAAA;AAAA;;AAFC;;AAAA;AAAA;AAAA;;;;;AAIc;;AAAf;AAAA;AAAA;AAAA;AAAA;AAA8B;;AAAA;;AAAA;AAA9B;AAAA;AAAA;AAAA;;;;AAEL;;AAAA;AAAA;AAAX;;;AACY;AAA+B;;AAA/B;AAAA;AAAA;;AAAA;;AAAA;;AAEe;;AAAf;AAAA;AAAA;AAAA;AAAA;ACzLD;;ADyLC;AAAA;AAAA;AAAA;AACI;AAA+B;;AAA/B;AAAJ;;;AAEZ;;;;;;AAEqB;AACO;AAEL;AAA+B;;AAA/B;AAAA;AAAA;AAAA;AAAA;;AAAA;AAEC;AAAA;AAAP;AAAA;;AAAA;;AAAA;AAAjB;;;AAC0B;;AAAA;;;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;;AAAd;;AAAA;AAAA;;AACO;;;AAAA;;;;;AAAJ;;;AACC;;AAAA;;AAAA;;;;;;;AAHC;;AAAA;AAAA;AAAA;;;;;AAML;;AAAA;AAAyB;;AAAA;AADtB;AAAP;;AAAA;AAIR;;;AAE8C;;AAA3B;;AAAA;AACJ;AAAA;AAAA;AAAA;AAAA;AAAA;AACY;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;AAAA;;;AAGI;;AAAnB;AAAA;AAAA;AAAuC;AAAvC;;AAAA;AACE;;AAAA;;AAAA;AADF;AAEgB;;AAAd;;;AAHS;;AACX;;AAAA;AADJ;AAAA;AAAA;AAKA;AACe;;AAAA;AACI;AAAA;;;AACF;;AAAA;AAAA;;;;;;;AAHjB;;;;AAAA;;;AAAA;AAMA;;",
  "op_pc_offset": 0,
  "pc_events": {
    "1": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.__algopy_entrypoint_with_init",
      "params": {},
      "block": "main",
      "stack_in": [],
      "op": "intcblock 0 1 48 16 13135300"
    },
    "11": {
      "op": "bytecblock \"deposited\" \"sales\" 0x0000 \"receipt_book\""
    },
    "45": {
      "op": "txn NumAppArgs",
      "defined_out": [
        "tmp%0#2"
      ],
      "stack_out": [
        "tmp%0#2"
      ]
    },
    "47": {
      "op": "bz main_bare_routing@15",
      "stack_out": []
    },
    "50": {
      "op": "pushbytess 0x3625e4eb 0x21f1ddff 0x13000a94 0xa6920066 0x09544810 0xd49ac60e 0xa18f1ffc 0x456e3975 0x1eabbb58 0xf8e0efaf // method \"deposit(pay)void\", method \"withdraw(uint64)void\", method \"sponsor_asset(asset)void\", method \"open_sale(axfer,uint64)void\", method \"close_sale(asset)void\", method \"buy((address,uint64))void\", method \"bid((address,uint64),uint64)void\", method \"claim_unencumbered_bids()void\", method \"get_total_and_unencumbered_bids()(uint64,uint64)\", method \"accept_bid(uint64)void\"",
      "defined_out": [
        "Method(accept_bid(uint64)void)",
        "Method(bid((address,uint64),uint64)void)",
        "Method(buy((address,uint64))void)",
        "Method(claim_unencumbered_bids()void)",
        "Method(close_sale(asset)void)",
        "Method(deposit(pay)void)",
        "Method(get_total_and_unencumbered_bids()(uint64,uint64))",
        "Method(open_sale(axfer,uint64)void)",
        "Method(sponsor_asset(asset)void)",
        "Method(withdraw(uint64)void)"
      ],
      "stack_out": [
        "Method(deposit(pay)void)",
        "Method(withdraw(uint64)void)",
        "Method(sponsor_asset(asset)void)",
        "Method(open_sale(axfer,uint64)void)",
        "Method(close_sale(asset)void)",
        "Method(buy((address,uint64))void)",
        "Method(bid((address,uint64),uint64)void)",
        "Method(claim_unencumbered_bids()void)",
        "Method(get_total_and_unencumbered_bids()(uint64,uint64))",
        "Method(accept_bid(uint64)void)"
      ]
    },
    "102": {
      "op": "txna ApplicationArgs 0",
      "defined_out": [
        "Method(accept_bid(uint64)void)",
        "Method(bid((address,uint64),uint64)void)",
        "Method(buy((address,uint64))void)",
        "Method(claim_unencumbered_bids()void)",
        "Method(close_sale(asset)void)",
        "Method(deposit(pay)void)",
        "Method(get_total_and_unencumbered_bids()(uint64,uint64))",
        "Method(open_sale(axfer,uint64)void)",
        "Method(sponsor_asset(asset)void)",
        "Method(withdraw(uint64)void)",
        "tmp%2#0"
      ],
      "stack_out": [
        "Method(deposit(pay)void)",
        "Method(withdraw(uint64)void)",
        "Method(sponsor_asset(asset)void)",
        "Method(open_sale(axfer,uint64)void)",
        "Method(close_sale(asset)void)",
        "Method(buy((address,uint64))void)",
        "Method(bid((address,uint64),uint64)void)",
        "Method(claim_unencumbered_bids()void)",
        "Method(get_total_and_unencumbered_bids()(uint64,uint64))",
        "Method(accept_bid(uint64)void)",
        "tmp%2#0"
      ]
    },
    "105": {
      "op": "match main_deposit_route@5 main_withdraw_route@6 main_sponsor_asset_route@7 main_open_sale_route@8 main_close_sale_route@9 main_buy_route@10 main_bid_route@11 main_claim_unencumbered_bids_route@12 main_get_total_and_unencumbered_bids_route@13 main_accept_bid_route@14",
      "stack_out": []
    },
    "127": {
      "block": "main_after_if_else@17",
      "stack_in": [],
      "op": "intc_0 // 0",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "128": {
      "op": "return",
      "stack_out": []
    },
    "129": {
      "block": "main_accept_bid_route@14",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "130": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%51#0"
      ],
      "stack_out": [
        "1",
        "tmp%51#0"
      ]
    },
    "132": {
      "op": "shl",
      "defined_out": [
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0"
      ]
    },
    "133": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%52#0"
      ],
      "stack_out": [
        "tmp%52#0",
        "3"
      ]
    },
    "135": {
      "op": "&",
      "defined_out": [
        "tmp%53#0"
      ],
      "stack_out": [
        "tmp%53#0"
      ]
    },
    "136": {
      "error": "OnCompletion is not one of NoOp, OptIn",
      "op": "assert // OnCompletion is not one of NoOp, OptIn",
      "stack_out": []
    },
    "137": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%54#0"
      ],
      "stack_out": [
        "tmp%54#0"
      ]
    },
    "139": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "140": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%3#0"
      ]
    },
    "143": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.accept_bid",
      "op": "callsub accept_bid",
      "stack_out": []
    },
    "146": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "147": {
      "op": "return",
      "stack_out": []
    },
    "148": {
      "block": "main_get_total_and_unencumbered_bids_route@13",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%45#0"
      ],
      "stack_out": [
        "tmp%45#0"
      ]
    },
    "150": {
      "op": "!",
      "defined_out": [
        "tmp%46#0"
      ],
      "stack_out": [
        "tmp%46#0"
      ]
    },
    "151": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "152": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%47#0"
      ],
      "stack_out": [
        "tmp%47#0"
      ]
    },
    "154": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "155": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.get_total_and_unencumbered_bids",
      "op": "callsub get_total_and_unencumbered_bids",
      "defined_out": [
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0"
      ]
    },
    "158": {
      "op": "pushbytes 0x151f7c75",
      "defined_out": [
        "0x151f7c75",
        "tmp%49#0"
      ],
      "stack_out": [
        "tmp%49#0",
        "0x151f7c75"
      ]
    },
    "164": {
      "op": "swap",
      "stack_out": [
        "0x151f7c75",
        "tmp%49#0"
      ]
    },
    "165": {
      "op": "concat",
      "defined_out": [
        "tmp%50#0"
      ],
      "stack_out": [
        "tmp%50#0"
      ]
    },
    "166": {
      "op": "log",
      "stack_out": []
    },
    "167": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "168": {
      "op": "return",
      "stack_out": []
    },
    "169": {
      "block": "main_claim_unencumbered_bids_route@12",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "170": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%40#0"
      ],
      "stack_out": [
        "1",
        "tmp%40#0"
      ]
    },
    "172": {
      "op": "shl",
      "defined_out": [
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0"
      ]
    },
    "173": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%41#0"
      ],
      "stack_out": [
        "tmp%41#0",
        "3"
      ]
    },
    "175": {
      "op": "&",
      "defined_out": [
        "tmp%42#0"
      ],
      "stack_out": [
        "tmp%42#0"
      ]
    },
    "176": {
      "error": "OnCompletion is not one of NoOp, OptIn",
      "op": "assert // OnCompletion is not one of NoOp, OptIn",
      "stack_out": []
    },
    "177": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%43#0"
      ],
      "stack_out": [
        "tmp%43#0"
      ]
    },
    "179": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "180": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.claim_unencumbered_bids",
      "op": "callsub claim_unencumbered_bids"
    },
    "183": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "184": {
      "op": "return",
      "stack_out": []
    },
    "185": {
      "block": "main_bid_route@11",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%36#0"
      ],
      "stack_out": [
        "tmp%36#0"
      ]
    },
    "187": {
      "op": "!",
      "defined_out": [
        "tmp%37#0"
      ],
      "stack_out": [
        "tmp%37#0"
      ]
    },
    "188": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "189": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%38#0"
      ],
      "stack_out": [
        "tmp%38#0"
      ]
    },
    "191": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "192": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[40]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[40]%1#0"
      ]
    },
    "195": {
      "op": "txna ApplicationArgs 2",
      "defined_out": [
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[40]%1#0",
        "reinterpret_bytes[8]%2#0"
      ]
    },
    "198": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.bid",
      "op": "callsub bid",
      "stack_out": []
    },
    "201": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "202": {
      "op": "return",
      "stack_out": []
    },
    "203": {
      "block": "main_buy_route@10",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%32#0"
      ],
      "stack_out": [
        "tmp%32#0"
      ]
    },
    "205": {
      "op": "!",
      "defined_out": [
        "tmp%33#0"
      ],
      "stack_out": [
        "tmp%33#0"
      ]
    },
    "206": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "207": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%34#0"
      ],
      "stack_out": [
        "tmp%34#0"
      ]
    },
    "209": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "210": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[40]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[40]%0#0"
      ]
    },
    "213": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.buy",
      "op": "callsub buy",
      "stack_out": []
    },
    "216": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "217": {
      "op": "return",
      "stack_out": []
    },
    "218": {
      "block": "main_close_sale_route@9",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "219": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%25#0"
      ],
      "stack_out": [
        "1",
        "tmp%25#0"
      ]
    },
    "221": {
      "op": "shl",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0"
      ]
    },
    "222": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%26#0"
      ],
      "stack_out": [
        "tmp%26#0",
        "3"
      ]
    },
    "224": {
      "op": "&",
      "defined_out": [
        "tmp%27#0"
      ],
      "stack_out": [
        "tmp%27#0"
      ]
    },
    "225": {
      "error": "OnCompletion is not one of NoOp, OptIn",
      "op": "assert // OnCompletion is not one of NoOp, OptIn",
      "stack_out": []
    },
    "226": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%28#0"
      ],
      "stack_out": [
        "tmp%28#0"
      ]
    },
    "228": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "229": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%1#0"
      ]
    },
    "232": {
      "op": "btoi",
      "defined_out": [
        "tmp%30#0"
      ],
      "stack_out": [
        "tmp%30#0"
      ]
    },
    "233": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%31#0"
      ],
      "stack_out": [
        "tmp%31#0"
      ]
    },
    "235": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.close_sale",
      "op": "callsub close_sale",
      "stack_out": []
    },
    "238": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "239": {
      "op": "return",
      "stack_out": []
    },
    "240": {
      "block": "main_open_sale_route@8",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%20#0"
      ],
      "stack_out": [
        "tmp%20#0"
      ]
    },
    "242": {
      "op": "!",
      "defined_out": [
        "tmp%21#0"
      ],
      "stack_out": [
        "tmp%21#0"
      ]
    },
    "243": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "244": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%22#0"
      ],
      "stack_out": [
        "tmp%22#0"
      ]
    },
    "246": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "247": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0"
      ]
    },
    "249": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "tmp%24#0"
      ],
      "stack_out": [
        "tmp%24#0",
        "1"
      ]
    },
    "250": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "251": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_idx%1#0 (copy)"
      ]
    },
    "252": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ]
    },
    "254": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "gtxn_idx%1#0",
        "gtxn_type%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type%1#0",
        "axfer"
      ]
    },
    "256": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "gtxn_type_matches%1#0"
      ]
    },
    "257": {
      "error": "transaction type is axfer",
      "op": "assert // transaction type is axfer",
      "stack_out": [
        "gtxn_idx%1#0"
      ]
    },
    "258": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%1#0"
      ],
      "stack_out": [
        "gtxn_idx%1#0",
        "reinterpret_bytes[8]%1#0"
      ]
    },
    "261": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.open_sale",
      "op": "callsub open_sale",
      "stack_out": []
    },
    "264": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "265": {
      "op": "return",
      "stack_out": []
    },
    "266": {
      "block": "main_sponsor_asset_route@7",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "tmp%14#0"
      ]
    },
    "268": {
      "op": "!",
      "defined_out": [
        "tmp%15#0"
      ],
      "stack_out": [
        "tmp%15#0"
      ]
    },
    "269": {
      "error": "OnCompletion is not NoOp",
      "op": "assert // OnCompletion is not NoOp",
      "stack_out": []
    },
    "270": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "tmp%16#0"
      ]
    },
    "272": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "273": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[1]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[1]%0#0"
      ]
    },
    "276": {
      "op": "btoi",
      "defined_out": [
        "tmp%18#0"
      ],
      "stack_out": [
        "tmp%18#0"
      ]
    },
    "277": {
      "op": "txnas Assets",
      "defined_out": [
        "tmp%19#0"
      ],
      "stack_out": [
        "tmp%19#0"
      ]
    },
    "279": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.sponsor_asset",
      "op": "callsub sponsor_asset",
      "stack_out": []
    },
    "282": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "283": {
      "op": "return",
      "stack_out": []
    },
    "284": {
      "block": "main_withdraw_route@6",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "285": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%9#0"
      ],
      "stack_out": [
        "1",
        "tmp%9#0"
      ]
    },
    "287": {
      "op": "shl",
      "defined_out": [
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0"
      ]
    },
    "288": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%10#0",
        "5"
      ]
    },
    "290": {
      "op": "&",
      "defined_out": [
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%11#0"
      ]
    },
    "291": {
      "error": "OnCompletion is not one of NoOp, CloseOut",
      "op": "assert // OnCompletion is not one of NoOp, CloseOut",
      "stack_out": []
    },
    "292": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%12#0"
      ],
      "stack_out": [
        "tmp%12#0"
      ]
    },
    "294": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "295": {
      "op": "txna ApplicationArgs 1",
      "defined_out": [
        "reinterpret_bytes[8]%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[8]%0#0"
      ]
    },
    "298": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.withdraw",
      "op": "callsub withdraw",
      "stack_out": []
    },
    "301": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "302": {
      "op": "return",
      "stack_out": []
    },
    "303": {
      "block": "main_deposit_route@5",
      "stack_in": [],
      "op": "intc_1 // 1",
      "defined_out": [
        "1"
      ],
      "stack_out": [
        "1"
      ]
    },
    "304": {
      "op": "txn OnCompletion",
      "defined_out": [
        "1",
        "tmp%3#0"
      ],
      "stack_out": [
        "1",
        "tmp%3#0"
      ]
    },
    "306": {
      "op": "shl",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "307": {
      "op": "pushint 3 // 3",
      "defined_out": [
        "3",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0",
        "3"
      ]
    },
    "309": {
      "op": "&",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "310": {
      "error": "OnCompletion is not one of NoOp, OptIn",
      "op": "assert // OnCompletion is not one of NoOp, OptIn",
      "stack_out": []
    },
    "311": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "313": {
      "error": "can only call when not creating",
      "op": "assert // can only call when not creating",
      "stack_out": []
    },
    "314": {
      "op": "txn GroupIndex",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "316": {
      "op": "intc_1 // 1",
      "stack_out": [
        "tmp%8#0",
        "1"
      ]
    },
    "317": {
      "op": "-",
      "defined_out": [
        "gtxn_idx%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "318": {
      "op": "dup",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_idx%0#0 (copy)"
      ]
    },
    "319": {
      "op": "gtxns TypeEnum",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0"
      ]
    },
    "321": {
      "op": "intc_1 // pay",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type%0#0",
        "pay"
      ]
    },
    "322": {
      "op": "==",
      "defined_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ],
      "stack_out": [
        "gtxn_idx%0#0",
        "gtxn_type_matches%0#0"
      ]
    },
    "323": {
      "error": "transaction type is pay",
      "op": "assert // transaction type is pay",
      "stack_out": [
        "gtxn_idx%0#0"
      ]
    },
    "324": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.deposit",
      "op": "callsub deposit",
      "stack_out": []
    },
    "327": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "328": {
      "op": "return",
      "stack_out": []
    },
    "329": {
      "block": "main_bare_routing@15",
      "stack_in": [],
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%56#0"
      ],
      "stack_out": [
        "tmp%56#0"
      ]
    },
    "331": {
      "op": "bnz main_after_if_else@17",
      "stack_out": []
    },
    "334": {
      "op": "txn ApplicationID",
      "defined_out": [
        "tmp%57#0"
      ],
      "stack_out": [
        "tmp%57#0"
      ]
    },
    "336": {
      "op": "!",
      "defined_out": [
        "tmp%58#0"
      ],
      "stack_out": [
        "tmp%58#0"
      ]
    },
    "337": {
      "error": "can only call when creating",
      "op": "assert // can only call when creating",
      "stack_out": []
    },
    "338": {
      "op": "intc_1 // 1",
      "defined_out": [
        "tmp%0#1"
      ],
      "stack_out": [
        "tmp%0#1"
      ]
    },
    "339": {
      "op": "return",
      "stack_out": []
    },
    "340": {
      "subroutine": "smart_contracts.digital_marketplace.subroutines.sales_box_mbr",
      "params": {
        "prefix_length#0": "uint64"
      },
      "block": "sales_box_mbr",
      "stack_in": [],
      "op": "proto 1 1"
    },
    "343": {
      "op": "frame_dig -1",
      "defined_out": [
        "prefix_length#0 (copy)"
      ],
      "stack_out": [
        "prefix_length#0 (copy)"
      ]
    },
    "345": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "prefix_length#0 (copy)"
      ],
      "stack_out": [
        "prefix_length#0 (copy)",
        "32"
      ]
    },
    "347": {
      "op": "+",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "348": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "8"
      ]
    },
    "350": {
      "op": "+",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "351": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "2"
      ]
    },
    "353": {
      "op": "+",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "354": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "tmp%2#0",
        "8"
      ]
    },
    "356": {
      "op": "+",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "357": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "tmp%3#0",
        "8"
      ]
    },
    "359": {
      "op": "+",
      "defined_out": [
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%4#0"
      ]
    },
    "360": {
      "op": "pushint 2 // 2",
      "stack_out": [
        "tmp%4#0",
        "2"
      ]
    },
    "362": {
      "op": "+",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "363": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "40"
      ]
    },
    "365": {
      "op": "+",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "366": {
      "op": "pushint 400 // 400",
      "defined_out": [
        "400",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "400"
      ]
    },
    "369": {
      "op": "*",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "370": {
      "op": "pushint 2500 // 2500",
      "defined_out": [
        "2500",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "2500"
      ]
    },
    "373": {
      "op": "+",
      "defined_out": [
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0"
      ]
    },
    "374": {
      "retsub": true,
      "op": "retsub"
    },
    "375": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.deposit",
      "params": {
        "payment#0": "uint64"
      },
      "block": "deposit",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "378": {
      "op": "frame_dig -1",
      "defined_out": [
        "payment#0 (copy)"
      ],
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "380": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "382": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "384": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "385": {
      "error": "Different sender",
      "op": "assert // Different sender",
      "stack_out": []
    },
    "386": {
      "op": "frame_dig -1",
      "stack_out": [
        "payment#0 (copy)"
      ]
    },
    "388": {
      "op": "gtxns Receiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "390": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "392": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "393": {
      "error": "Wrong receiver",
      "op": "assert // Wrong receiver",
      "stack_out": []
    },
    "394": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "396": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0"
      ]
    },
    "397": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "0",
        "\"deposited\""
      ]
    },
    "398": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "399": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "400": {
      "op": "cover 2",
      "stack_out": [
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "402": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "403": {
      "op": "frame_dig -1",
      "stack_out": [
        "state_get%0#0",
        "payment#0 (copy)"
      ]
    },
    "405": {
      "op": "gtxns Amount",
      "defined_out": [
        "state_get%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "tmp%7#0"
      ]
    },
    "407": {
      "op": "txn Sender",
      "defined_out": [
        "state_get%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "409": {
      "op": "cover 2",
      "stack_out": [
        "tmp%8#0",
        "state_get%0#0",
        "tmp%7#0"
      ]
    },
    "411": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%8#0",
        "new_state_value%0#0"
      ]
    },
    "412": {
      "op": "bytec_0 // \"deposited\""
    },
    "413": {
      "op": "swap",
      "stack_out": [
        "tmp%8#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "414": {
      "op": "app_local_put",
      "stack_out": []
    },
    "415": {
      "retsub": true,
      "op": "retsub"
    },
    "416": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.withdraw",
      "params": {
        "amount#0": "bytes"
      },
      "block": "withdraw",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "419": {
      "op": "txn OnCompletion",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "421": {
      "op": "bnz withdraw_else_body@3",
      "stack_out": []
    },
    "424": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "426": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "427": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "428": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "429": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "430": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "431": {
      "op": "frame_dig -1",
      "defined_out": [
        "amount#0 (copy)",
        "maybe_value%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "amount#0 (copy)"
      ]
    },
    "433": {
      "op": "btoi",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "434": {
      "op": "swap",
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0"
      ]
    },
    "435": {
      "op": "dig 1",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "437": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%2#0",
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "438": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0",
        "tmp%2#0"
      ]
    },
    "440": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "tmp%3#0",
        "new_state_value%0#0",
        "tmp%2#0",
        "\"deposited\""
      ]
    },
    "441": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "tmp%2#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "443": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "444": {
      "op": "itxn_begin"
    },
    "445": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_Receiver_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_Receiver_idx_0#0"
      ]
    },
    "447": {
      "op": "itxn_field Receiver"
    },
    "449": {
      "op": "itxn_field Amount",
      "stack_out": []
    },
    "451": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "452": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "454": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "455": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "457": {
      "op": "itxn_submit"
    },
    "458": {
      "retsub": true,
      "op": "retsub"
    },
    "459": {
      "block": "withdraw_else_body@3",
      "stack_in": [],
      "op": "itxn_begin"
    },
    "460": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "462": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0"
      ]
    },
    "463": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0",
        "0"
      ]
    },
    "464": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "tmp%4#0",
        "0",
        "\"deposited\""
      ]
    },
    "465": {
      "op": "app_local_get_ex",
      "defined_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "maybe_exists%1#0",
        "maybe_value%1#0"
      ],
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "466": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0",
        "maybe_value%1#0"
      ]
    },
    "467": {
      "op": "itxn_field Amount",
      "stack_out": [
        "inner_txn_params%1%%param_Receiver_idx_0#0"
      ]
    },
    "469": {
      "op": "itxn_field Receiver",
      "stack_out": []
    },
    "471": {
      "op": "intc_1 // pay",
      "defined_out": [
        "pay"
      ],
      "stack_out": [
        "pay"
      ]
    },
    "472": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "474": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "475": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "477": {
      "op": "itxn_submit"
    },
    "478": {
      "retsub": true,
      "op": "retsub"
    },
    "479": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.sponsor_asset",
      "params": {
        "asset#0": "uint64"
      },
      "block": "sponsor_asset",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "482": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "484": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "486": {
      "op": "asset_holding_get AssetBalance",
      "defined_out": [
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%2#0"
      ]
    },
    "488": {
      "op": "bury 1",
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "490": {
      "op": "!",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "491": {
      "error": "Already opted in",
      "op": "assert // Already opted in",
      "stack_out": []
    },
    "492": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "494": {
      "op": "asset_params_get AssetClawback",
      "defined_out": [
        "check%0#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "check%0#0"
      ]
    },
    "496": {
      "error": "asset exists",
      "op": "assert // asset exists",
      "stack_out": [
        "value%0#0"
      ]
    },
    "497": {
      "op": "global ZeroAddress",
      "defined_out": [
        "tmp%4#0",
        "value%0#0"
      ],
      "stack_out": [
        "value%0#0",
        "tmp%4#0"
      ]
    },
    "499": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "500": {
      "error": "Clawback ASA",
      "op": "assert // Clawback ASA",
      "stack_out": []
    },
    "501": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "503": {
      "op": "dup",
      "defined_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ]
    },
    "504": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)",
        "0"
      ]
    },
    "505": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%6#0",
        "tmp%6#0 (copy)"
      ],
      "stack_out": [
        "tmp%6#0",
        "tmp%6#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "506": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "507": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "tmp%6#0",
        "maybe_value%0#0"
      ]
    },
    "508": {
      "op": "global AssetOptInMinBalance",
      "defined_out": [
        "maybe_value%0#0",
        "tmp%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ]
    },
    "510": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "new_state_value%0#0"
      ]
    },
    "511": {
      "op": "bytec_0 // \"deposited\""
    },
    "512": {
      "op": "swap",
      "stack_out": [
        "tmp%6#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "513": {
      "op": "app_local_put",
      "stack_out": []
    },
    "514": {
      "op": "itxn_begin"
    },
    "515": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "517": {
      "op": "intc_0 // 0",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "0"
      ]
    },
    "518": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "520": {
      "op": "itxn_field AssetReceiver",
      "stack_out": []
    },
    "522": {
      "op": "frame_dig -1",
      "stack_out": [
        "asset#0 (copy)"
      ]
    },
    "524": {
      "op": "itxn_field XferAsset",
      "stack_out": []
    },
    "526": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer"
      ],
      "stack_out": [
        "axfer"
      ]
    },
    "528": {
      "op": "itxn_field TypeEnum",
      "stack_out": []
    },
    "530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "0"
      ]
    },
    "531": {
      "op": "itxn_field Fee",
      "stack_out": []
    },
    "533": {
      "op": "itxn_submit"
    },
    "534": {
      "retsub": true,
      "op": "retsub"
    },
    "535": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.open_sale",
      "params": {
        "asset_deposit#0": "uint64",
        "cost#0": "bytes"
      },
      "block": "open_sale",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "538": {
      "op": "frame_dig -2",
      "defined_out": [
        "asset_deposit#0 (copy)"
      ],
      "stack_out": [
        "asset_deposit#0 (copy)"
      ]
    },
    "540": {
      "op": "gtxns Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "542": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "tmp%1#0"
      ]
    },
    "544": {
      "op": "==",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%2#0"
      ]
    },
    "545": {
      "error": "Different sender",
      "op": "assert // Different sender",
      "stack_out": []
    },
    "546": {
      "op": "frame_dig -2",
      "stack_out": [
        "asset_deposit#0 (copy)"
      ]
    },
    "548": {
      "op": "gtxns AssetReceiver",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "550": {
      "op": "global CurrentApplicationAddress",
      "defined_out": [
        "tmp%3#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "tmp%4#0"
      ]
    },
    "552": {
      "op": "==",
      "defined_out": [
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "553": {
      "error": "Wrong receiver",
      "op": "assert // Wrong receiver",
      "stack_out": []
    },
    "554": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%6#0"
      ]
    },
    "556": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%6#0",
        "asset_deposit#0 (copy)"
      ]
    },
    "558": {
      "op": "gtxns XferAsset",
      "defined_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "to_encode%0#0"
      ]
    },
    "560": {
      "op": "itob",
      "defined_out": [
        "tmp%6#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%6#0",
        "val_as_bytes%0#0"
      ]
    },
    "561": {
      "op": "concat",
      "defined_out": [
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0"
      ]
    },
    "562": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0",
        "\"sales\""
      ]
    },
    "563": {
      "op": "swap",
      "stack_out": [
        "\"sales\"",
        "sale_key#0"
      ]
    },
    "564": {
      "op": "concat",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "565": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "566": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "567": {
      "op": "bury 1",
      "stack_out": [
        "tmp%7#0",
        "maybe_exists%0#0"
      ]
    },
    "569": {
      "op": "!",
      "defined_out": [
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "570": {
      "error": "Sale already exists",
      "op": "assert // Sale already exists",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "571": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "573": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ]
    },
    "574": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "0"
      ]
    },
    "575": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "tmp%9#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "576": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "577": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "maybe_value%1#0"
      ]
    },
    "578": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "maybe_value%1#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "5"
      ]
    },
    "580": {
      "callsub": "smart_contracts.digital_marketplace.subroutines.sales_box_mbr",
      "op": "callsub sales_box_mbr",
      "defined_out": [
        "maybe_value%1#0",
        "tmp%11#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "maybe_value%1#0",
        "tmp%11#0"
      ]
    },
    "583": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "new_state_value%0#0"
      ]
    },
    "584": {
      "op": "bytec_0 // \"deposited\""
    },
    "585": {
      "op": "swap",
      "stack_out": [
        "tmp%7#0",
        "tmp%9#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "586": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%7#0"
      ]
    },
    "587": {
      "op": "frame_dig -2",
      "stack_out": [
        "tmp%7#0",
        "asset_deposit#0 (copy)"
      ]
    },
    "589": {
      "op": "gtxns AssetAmount",
      "defined_out": [
        "tmp%7#0",
        "to_encode%1#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "to_encode%1#0"
      ]
    },
    "591": {
      "op": "itob",
      "defined_out": [
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "val_as_bytes%1#0"
      ]
    },
    "592": {
      "op": "frame_dig -1",
      "defined_out": [
        "cost#0 (copy)",
        "tmp%7#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "val_as_bytes%1#0",
        "cost#0 (copy)"
      ]
    },
    "594": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%5#0"
      ]
    },
    "595": {
      "op": "pushbytes 0x0012",
      "defined_out": [
        "0x0012",
        "encoded_tuple_buffer%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%5#0",
        "0x0012"
      ]
    },
    "599": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%6#0"
      ]
    },
    "600": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "encoded_tuple_buffer%6#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%6#0",
        "0x0000"
      ]
    },
    "601": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "602": {
      "op": "dig 1",
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "604": {
      "op": "box_del",
      "defined_out": [
        "encoded_tuple_buffer%7#0",
        "tmp%7#0",
        "{box_del}"
      ],
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%7#0",
        "{box_del}"
      ]
    },
    "605": {
      "op": "pop",
      "stack_out": [
        "tmp%7#0",
        "encoded_tuple_buffer%7#0"
      ]
    },
    "606": {
      "op": "box_put",
      "stack_out": []
    },
    "607": {
      "retsub": true,
      "op": "retsub"
    },
    "608": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.close_sale",
      "params": {
        "asset#0": "uint64"
      },
      "block": "close_sale",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "611": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "613": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "615": {
      "op": "itob",
      "defined_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "val_as_bytes%0#0"
      ]
    },
    "616": {
      "op": "concat",
      "defined_out": [
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0"
      ]
    },
    "617": {
      "op": "itxn_begin"
    },
    "618": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "620": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "\"sales\""
      ]
    },
    "621": {
      "op": "uncover 2",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "\"sales\"",
        "sale_key#0"
      ]
    },
    "623": {
      "op": "concat",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0"
      ]
    },
    "624": {
      "op": "dup",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "625": {
      "op": "box_get",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "626": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "maybe_value%0#0"
      ]
    },
    "627": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "maybe_value%0#0",
        "0"
      ]
    },
    "628": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "629": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%1#0"
      ]
    },
    "631": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "632": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "634": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "asset#0 (copy)"
      ]
    },
    "636": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "638": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "axfer"
      ]
    },
    "640": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "642": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "643": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "645": {
      "op": "itxn_submit"
    },
    "646": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0"
      ]
    },
    "648": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "0"
      ]
    },
    "649": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%1#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%3#0",
        "0",
        "\"deposited\""
      ]
    },
    "650": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "651": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "0"
      ]
    },
    "652": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "654": {
      "op": "select",
      "defined_out": [
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "state_get%0#0"
      ]
    },
    "655": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "state_get%0#0",
        "5"
      ]
    },
    "657": {
      "callsub": "smart_contracts.digital_marketplace.subroutines.sales_box_mbr",
      "op": "callsub sales_box_mbr",
      "defined_out": [
        "state_get%0#0",
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "state_get%0#0",
        "tmp%5#0"
      ]
    },
    "660": {
      "op": "txn Sender",
      "defined_out": [
        "state_get%0#0",
        "tmp%1#0",
        "tmp%5#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "state_get%0#0",
        "tmp%5#0",
        "tmp%6#0"
      ]
    },
    "662": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "tmp%6#0",
        "state_get%0#0",
        "tmp%5#0"
      ]
    },
    "664": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%6#0",
        "new_state_value%0#0"
      ]
    },
    "665": {
      "op": "bytec_0 // \"deposited\""
    },
    "666": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "tmp%6#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "667": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "668": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "669": {
      "op": "pop",
      "stack_out": []
    },
    "670": {
      "retsub": true,
      "op": "retsub"
    },
    "671": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.buy",
      "params": {
        "sale_key#0": "bytes"
      },
      "block": "buy",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "674": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "676": {
      "op": "frame_dig -1",
      "defined_out": [
        "sale_key#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "sale_key#0 (copy)"
      ]
    },
    "678": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "681": {
      "op": "swap",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%0#0"
      ]
    },
    "682": {
      "op": "dig 1",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "reinterpret_bytes[32]%0#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%0#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ]
    },
    "684": {
      "op": "!=",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ]
    },
    "685": {
      "error": "Seller cannot be buyer",
      "op": "assert // Seller cannot be buyer",
      "stack_out": [
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "686": {
      "op": "txn Sender",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ]
    },
    "688": {
      "op": "dup",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "689": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0"
      ]
    },
    "690": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%2#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "691": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "692": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0"
      ]
    },
    "693": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "\"sales\""
      ]
    },
    "694": {
      "op": "frame_dig -1",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "\"sales\"",
        "sale_key#0 (copy)"
      ]
    },
    "696": {
      "op": "concat",
      "defined_out": [
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0"
      ]
    },
    "697": {
      "op": "dup",
      "defined_out": [
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "698": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "699": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "maybe_value%1#0"
      ]
    },
    "700": {
      "op": "pushint 8 // 8",
      "defined_out": [
        "8",
        "maybe_value%0#0",
        "maybe_value%1#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "maybe_value%1#0",
        "8"
      ]
    },
    "702": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "maybe_value%0#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "703": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0",
        "maybe_value%0#0"
      ]
    },
    "705": {
      "op": "swap",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "maybe_value%0#0",
        "tmp%5#0"
      ]
    },
    "706": {
      "op": "-",
      "defined_out": [
        "new_state_value%0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%2#0",
        "tmp%3#0",
        "new_state_value%0#0"
      ]
    },
    "707": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "new_state_value%0#0",
        "tmp%2#0"
      ]
    },
    "709": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "new_state_value%0#0",
        "tmp%2#0",
        "\"deposited\""
      ]
    },
    "710": {
      "op": "uncover 2",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "tmp%2#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "712": {
      "op": "app_local_put",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0"
      ]
    },
    "713": {
      "op": "dig 1",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "reinterpret_bytes[32]%0#0 (copy)"
      ]
    },
    "715": {
      "op": "intc_0 // 0",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "reinterpret_bytes[32]%0#0 (copy)",
        "0"
      ]
    },
    "716": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "reinterpret_bytes[32]%0#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "717": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "718": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0"
      ]
    },
    "719": {
      "op": "dig 1",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "tmp%3#0 (copy)"
      ]
    },
    "721": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "722": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0"
      ]
    },
    "723": {
      "op": "pushint 8 // 8",
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "maybe_value%3#0",
        "8"
      ]
    },
    "725": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%2#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "tmp%8#0"
      ]
    },
    "726": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "maybe_value%2#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "tmp%8#0",
        "5"
      ]
    },
    "728": {
      "callsub": "smart_contracts.digital_marketplace.subroutines.sales_box_mbr",
      "op": "callsub sales_box_mbr",
      "defined_out": [
        "maybe_value%2#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%10#0",
        "tmp%3#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "tmp%8#0",
        "tmp%10#0"
      ]
    },
    "731": {
      "op": "+",
      "defined_out": [
        "maybe_value%2#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%11#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "maybe_value%2#0",
        "tmp%11#0"
      ]
    },
    "732": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%3#0",
        "new_state_value%1#0"
      ]
    },
    "733": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "new_state_value%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "735": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "tmp%3#0",
        "new_state_value%1#0",
        "reinterpret_bytes[32]%0#0",
        "\"deposited\""
      ]
    },
    "736": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%3#0",
        "reinterpret_bytes[32]%0#0",
        "\"deposited\"",
        "new_state_value%1#0"
      ]
    },
    "738": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "739": {
      "op": "itxn_begin"
    },
    "740": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%3#0",
        "sale_key#0 (copy)"
      ]
    },
    "742": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "sale_key#0 (copy)",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "sale_key#0 (copy)",
        "32"
      ]
    },
    "744": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "745": {
      "op": "txn Sender",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "747": {
      "op": "dig 2",
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "tmp%3#0 (copy)"
      ]
    },
    "749": {
      "op": "box_get",
      "defined_out": [
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "maybe_exists%4#0",
        "maybe_value%4#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%4#0",
        "maybe_exists%4#0"
      ]
    },
    "750": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%4#0"
      ]
    },
    "751": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "maybe_value%4#0",
        "0"
      ]
    },
    "752": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "753": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "inner_txn_params%0%%param_AssetReceiver_idx_0#0"
      ]
    },
    "755": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%3#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "757": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "759": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0",
        "axfer"
      ]
    },
    "761": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "763": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%3#0",
        "0"
      ]
    },
    "764": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "766": {
      "op": "itxn_submit"
    },
    "767": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "768": {
      "op": "pop",
      "stack_out": []
    },
    "769": {
      "retsub": true,
      "op": "retsub"
    },
    "770": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.bid",
      "params": {
        "sale_key#0": "bytes",
        "new_bid_amount#0": "bytes"
      },
      "block": "bid",
      "stack_in": [],
      "op": "proto 2 0"
    },
    "773": {
      "op": "intc_0 // 0",
      "stack_out": [
        "new_bid_receipt#0"
      ]
    },
    "774": {
      "op": "dupn 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0"
      ]
    },
    "776": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0"
      ]
    },
    "778": {
      "op": "dupn 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1"
      ]
    },
    "780": {
      "op": "txn Sender"
    },
    "782": {
      "op": "dupn 2",
      "defined_out": [
        "arc4_sender#0",
        "arc4_sender#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "arc4_sender#0",
        "arc4_sender#0 (copy)"
      ]
    },
    "784": {
      "op": "frame_dig -1",
      "defined_out": [
        "arc4_sender#0",
        "arc4_sender#0 (copy)",
        "new_bid_amount#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "arc4_sender#0",
        "arc4_sender#0 (copy)",
        "new_bid_amount#0 (copy)"
      ]
    },
    "786": {
      "op": "concat",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "arc4_sender#0",
        "new_bid#0"
      ]
    },
    "787": {
      "op": "swap",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "arc4_sender#0"
      ]
    },
    "788": {
      "op": "frame_dig -2",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0",
        "sale_key#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "arc4_sender#0",
        "sale_key#0 (copy)"
      ]
    },
    "790": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0",
        "tmp%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "arc4_sender#0",
        "tmp%0#0"
      ]
    },
    "793": {
      "op": "!=",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "tmp%1#0"
      ]
    },
    "794": {
      "error": "Seller cannot be bidder",
      "op": "assert // Seller cannot be bidder",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0"
      ]
    },
    "795": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "arc4_sender#0",
        "new_bid#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "\"sales\""
      ]
    },
    "796": {
      "op": "frame_dig -2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "\"sales\"",
        "sale_key#0 (copy)"
      ]
    },
    "798": {
      "op": "concat",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "tmp%2#0"
      ]
    },
    "799": {
      "op": "dup",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%2#0"
      ]
    },
    "800": {
      "op": "cover 2",
      "defined_out": [
        "arc4_sender#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%2#0"
      ]
    },
    "802": {
      "op": "box_get",
      "defined_out": [
        "arc4_sender#0",
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "803": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0"
      ]
    },
    "804": {
      "op": "dup",
      "defined_out": [
        "arc4_sender#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "805": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "arc4_sender#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "maybe_value%0#0 (copy)",
        "16"
      ]
    },
    "806": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_sender#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "item_start_offset%0#0"
      ]
    },
    "807": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0 (copy)"
      ]
    },
    "809": {
      "op": "len",
      "defined_out": [
        "arc4_sender#0",
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%0#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_value%0#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "810": {
      "op": "substring3",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_best_bid#0"
      ]
    },
    "811": {
      "op": "dup",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_best_bid#0",
        "maybe_best_bid#0"
      ]
    },
    "812": {
      "op": "cover 3",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_best_bid#0"
      ]
    },
    "814": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_best_bid#0",
        "0x0000"
      ]
    },
    "815": {
      "op": "!=",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%4#0"
      ]
    },
    "816": {
      "op": "bz bid_else_body@2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0"
      ]
    },
    "819": {
      "op": "frame_dig 7",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "maybe_best_bid#0"
      ]
    },
    "821": {
      "op": "extract 2 40",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%5#0"
      ]
    },
    "824": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%5#0",
        "32"
      ]
    },
    "826": {
      "op": "extract_uint64",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%7#0"
      ]
    },
    "827": {
      "op": "frame_dig -1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%7#0",
        "new_bid_amount#0 (copy)"
      ]
    },
    "829": {
      "op": "btoi",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%7#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%7#0",
        "tmp%8#0"
      ]
    },
    "830": {
      "op": "<",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0",
        "tmp%9#0"
      ]
    },
    "831": {
      "error": "Worse bid",
      "op": "assert // Worse bid",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0"
      ]
    },
    "832": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0"
      ]
    },
    "833": {
      "op": "dup",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "834": {
      "op": "box_get",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "835": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0"
      ]
    },
    "836": {
      "op": "dup",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "837": {
      "op": "intc_3 // 16",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "16"
      ]
    },
    "838": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_sender#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0"
      ]
    },
    "839": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "841": {
      "op": "len",
      "defined_out": [
        "arc4_sender#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "842": {
      "op": "dig 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "844": {
      "op": "dig 2",
      "defined_out": [
        "arc4_sender#0",
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "item_start_offset%1#0 (copy)",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0",
        "maybe_value%1#0 (copy)",
        "item_start_offset%1#0 (copy)"
      ]
    },
    "846": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "maybe_value%1#0 (copy)",
        "item_start_offset%1#0 (copy)",
        "item_end_offset%1#0"
      ]
    },
    "848": {
      "op": "substring3",
      "defined_out": [
        "arc4_sender#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0"
      ]
    },
    "849": {
      "op": "dup",
      "defined_out": [
        "arc4_sender#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0",
        "tmp%11#0 (copy)"
      ]
    },
    "850": {
      "op": "intc_0 // 0",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0",
        "tmp%11#0 (copy)",
        "0"
      ]
    },
    "851": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_sender#0",
        "array_length%0#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "new_bid#0",
        "tmp%11#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0",
        "array_length%0#0"
      ]
    },
    "852": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0"
      ]
    },
    "853": {
      "op": "uncover 4",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "tmp%11#0",
        "new_bid#0"
      ]
    },
    "855": {
      "op": "replace2 2",
      "defined_out": [
        "arc4_sender#0",
        "item_start_offset%1#0",
        "maybe_best_bid#0",
        "maybe_value%1#0",
        "tmp%2#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%1#0",
        "item_start_offset%1#0",
        "updated_target%0#0"
      ]
    },
    "857": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "item_start_offset%1#0",
        "updated_target%0#0",
        "maybe_value%1#0"
      ]
    },
    "859": {
      "op": "intc_0 // 0",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "item_start_offset%1#0",
        "updated_target%0#0",
        "maybe_value%1#0",
        "0"
      ]
    },
    "860": {
      "op": "uncover 3",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_target%0#0",
        "maybe_value%1#0",
        "0",
        "item_start_offset%1#0"
      ]
    },
    "862": {
      "op": "extract3",
      "defined_out": [
        "arc4_sender#0",
        "data_up_to_item%0#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_target%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_target%0#0",
        "data_up_to_item%0#0"
      ]
    },
    "863": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "data_up_to_item%0#0",
        "updated_target%0#0"
      ]
    },
    "864": {
      "op": "concat",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0"
      ]
    },
    "865": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0",
        "tmp%2#0 (copy)"
      ]
    },
    "867": {
      "op": "box_del",
      "defined_out": [
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0",
        "{box_del}"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0",
        "{box_del}"
      ]
    },
    "868": {
      "op": "pop",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%0#0"
      ]
    },
    "869": {
      "op": "box_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "870": {
      "block": "bid_after_if_else@3",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "frame_dig -2",
      "defined_out": [
        "sale_key#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "sale_key#0 (copy)"
      ]
    },
    "872": {
      "op": "frame_dig -1",
      "defined_out": [
        "new_bid_amount#0 (copy)",
        "sale_key#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "sale_key#0 (copy)",
        "new_bid_amount#0 (copy)"
      ]
    },
    "874": {
      "op": "concat",
      "defined_out": [
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid_receipt#0"
      ]
    },
    "875": {
      "op": "frame_bury 0",
      "defined_out": [
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "877": {
      "op": "bytec_3 // \"receipt_book\"",
      "defined_out": [
        "\"receipt_book\"",
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "\"receipt_book\""
      ]
    },
    "878": {
      "op": "frame_dig 6",
      "defined_out": [
        "\"receipt_book\"",
        "arc4_sender#0",
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "\"receipt_book\"",
        "arc4_sender#0"
      ]
    },
    "880": {
      "op": "concat",
      "defined_out": [
        "arc4_sender#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0"
      ]
    },
    "881": {
      "op": "dup",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "tmp%14#0"
      ]
    },
    "882": {
      "op": "frame_bury 2",
      "defined_out": [
        "arc4_sender#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0"
      ]
    },
    "884": {
      "op": "box_get",
      "defined_out": [
        "arc4_sender#0",
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "885": {
      "op": "bury 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_exists%3#0"
      ]
    },
    "887": {
      "op": "bz bid_else_body@8",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "890": {
      "op": "frame_dig 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0"
      ]
    },
    "892": {
      "op": "box_get",
      "defined_out": [
        "arc4_sender#0",
        "maybe_exists%4#0",
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0",
        "maybe_exists%4#0"
      ]
    },
    "893": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_exists%4#0",
        "receipt#0"
      ]
    },
    "894": {
      "op": "dup",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "maybe_exists%4#0",
        "receipt#0",
        "receipt#0 (copy)"
      ]
    },
    "895": {
      "op": "cover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0",
        "maybe_exists%4#0",
        "receipt#0"
      ]
    },
    "897": {
      "op": "frame_bury 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0",
        "maybe_exists%4#0"
      ]
    },
    "899": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0"
      ]
    },
    "900": {
      "op": "intc_0 // 0",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0",
        "0"
      ]
    },
    "901": {
      "op": "extract_uint16",
      "defined_out": [
        "arc4_sender#0",
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%0#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%0#1"
      ]
    },
    "902": {
      "op": "frame_bury 5",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "904": {
      "op": "intc_0 // 0",
      "defined_out": [
        "arc4_sender#0",
        "i#0",
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%0#1",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0"
      ]
    },
    "905": {
      "op": "frame_bury 3",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "907": {
      "block": "bid_for_header@13",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0"
      ]
    },
    "909": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0",
        "tmp%0#1"
      ]
    },
    "911": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "continue_looping%0#0"
      ]
    },
    "912": {
      "op": "bz bid_after_for@17",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "915": {
      "op": "frame_dig 1",
      "defined_out": [
        "i#0",
        "receipt#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "receipt#0"
      ]
    },
    "917": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#1",
        "i#0",
        "receipt#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_head_and_tail%0#1"
      ]
    },
    "920": {
      "op": "frame_dig 3",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_head_and_tail%0#1",
        "i#0"
      ]
    },
    "922": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "array_head_and_tail%0#1",
        "i#0",
        "receipt#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_head_and_tail%0#1",
        "i#0",
        "48"
      ]
    },
    "923": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#1",
        "i#0",
        "item_offset%0#1",
        "receipt#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_head_and_tail%0#1",
        "item_offset%0#1"
      ]
    },
    "924": {
      "op": "intc_2 // 48",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_head_and_tail%0#1",
        "item_offset%0#1",
        "48"
      ]
    },
    "925": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "receipt#0",
        "tmp%0#1",
        "tmp%1#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%1#1"
      ]
    },
    "926": {
      "error": "Index access is out of bounds",
      "op": "extract 0 40 // on error: Index access is out of bounds",
      "defined_out": [
        "i#0",
        "receipt#0",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0"
      ]
    },
    "929": {
      "op": "frame_dig -2",
      "defined_out": [
        "i#0",
        "receipt#0",
        "sale_key#0 (copy)",
        "tmp%0#1",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "sale_key#0 (copy)"
      ]
    },
    "931": {
      "op": "==",
      "defined_out": [
        "i#0",
        "receipt#0",
        "tmp%0#1",
        "tmp%3#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%3#1"
      ]
    },
    "932": {
      "op": "bz bid_after_if_else@16",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "935": {
      "op": "intc_1 // 1",
      "defined_out": [
        "i#0",
        "receipt#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0"
      ]
    },
    "936": {
      "op": "frame_dig 3",
      "defined_out": [
        "i#0",
        "index#0",
        "receipt#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0",
        "index#0"
      ]
    },
    "938": {
      "op": "frame_bury 4",
      "defined_out": [
        "found#0",
        "i#0",
        "index#0",
        "receipt#0",
        "tmp%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "found#0"
      ]
    },
    "940": {
      "block": "bid_after_inlined_smart_contracts.digital_marketplace.subroutines.find_bid_receipt@18",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "found#0"
      ],
      "op": "bz bid_else_body@6",
      "defined_out": [],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "943": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0"
      ]
    },
    "945": {
      "op": "dup",
      "defined_out": [
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ]
    },
    "946": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0"
      ]
    },
    "947": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%16#0",
        "tmp%16#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%16#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "948": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%5#0",
        "maybe_value%5#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "maybe_value%5#0",
        "maybe_exists%5#0"
      ]
    },
    "949": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "maybe_value%5#0"
      ]
    },
    "950": {
      "op": "frame_dig 2",
      "defined_out": [
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "maybe_value%5#0",
        "tmp%14#0"
      ]
    },
    "952": {
      "op": "dup",
      "defined_out": [
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "maybe_value%5#0",
        "tmp%14#0 (copy)",
        "tmp%14#0 (copy)"
      ]
    },
    "953": {
      "op": "cover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "tmp%14#0 (copy)"
      ]
    },
    "955": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%6#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "maybe_value%6#0",
        "maybe_exists%6#0"
      ]
    },
    "956": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "maybe_value%6#0"
      ]
    },
    "957": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%1#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0"
      ]
    },
    "960": {
      "op": "frame_dig 4",
      "defined_out": [
        "array_head_and_tail%1#0",
        "index#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0",
        "index#0"
      ]
    },
    "962": {
      "op": "dup",
      "defined_out": [
        "array_head_and_tail%1#0",
        "index#0",
        "index#0 (copy)",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0",
        "index#0 (copy)",
        "index#0 (copy)"
      ]
    },
    "963": {
      "op": "cover 4",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0",
        "index#0 (copy)"
      ]
    },
    "965": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "array_head_and_tail%1#0",
        "index#0",
        "index#0 (copy)",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0",
        "index#0 (copy)",
        "48"
      ]
    },
    "966": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%1#0",
        "index#0",
        "item_offset%3#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "array_head_and_tail%1#0",
        "item_offset%3#0"
      ]
    },
    "967": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "array_head_and_tail%1#0"
      ]
    },
    "968": {
      "op": "dig 1",
      "defined_out": [
        "array_head_and_tail%1#0",
        "index#0",
        "item_offset%3#0",
        "item_offset%3#0 (copy)",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "array_head_and_tail%1#0",
        "item_offset%3#0 (copy)"
      ]
    },
    "970": {
      "op": "intc_2 // 48",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "array_head_and_tail%1#0",
        "item_offset%3#0 (copy)",
        "48"
      ]
    },
    "971": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "index#0",
        "item_offset%3#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "tmp%18#0"
      ]
    },
    "972": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "index#0",
        "item_offset%3#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0",
        "tmp%18#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "tmp%18#0",
        "40"
      ]
    },
    "974": {
      "op": "extract_uint64",
      "defined_out": [
        "index#0",
        "item_offset%3#0",
        "maybe_value%5#0",
        "tmp%14#0",
        "tmp%16#0",
        "tmp%20#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "maybe_value%5#0",
        "item_offset%3#0",
        "tmp%20#0"
      ]
    },
    "975": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "tmp%20#0",
        "maybe_value%5#0"
      ]
    },
    "977": {
      "op": "+",
      "defined_out": [
        "index#0",
        "item_offset%3#0",
        "new_state_value%0#0",
        "tmp%14#0",
        "tmp%16#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%16#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "new_state_value%0#0"
      ]
    },
    "978": {
      "op": "uncover 4",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "new_state_value%0#0",
        "tmp%16#0"
      ]
    },
    "980": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "new_state_value%0#0",
        "tmp%16#0",
        "\"deposited\""
      ]
    },
    "981": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "tmp%16#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "983": {
      "op": "app_local_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0"
      ]
    },
    "984": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "tmp%14#0 (copy)"
      ]
    },
    "986": {
      "op": "box_get",
      "defined_out": [
        "index#0",
        "item_offset%3#0",
        "maybe_exists%7#0",
        "maybe_value%7#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "maybe_exists%7#0"
      ]
    },
    "987": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0"
      ]
    },
    "988": {
      "op": "dup",
      "defined_out": [
        "index#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "maybe_value%7#0 (copy)",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "maybe_value%7#0 (copy)"
      ]
    },
    "989": {
      "op": "intc_0 // 0",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "maybe_value%7#0 (copy)",
        "0"
      ]
    },
    "990": {
      "op": "extract_uint16",
      "defined_out": [
        "array_length%1#0",
        "index#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "index#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "array_length%1#0"
      ]
    },
    "991": {
      "op": "uncover 4",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "array_length%1#0",
        "index#0"
      ]
    },
    "993": {
      "op": ">",
      "defined_out": [
        "index#0",
        "index_is_in_bounds%1#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "index_is_in_bounds%1#0"
      ]
    },
    "994": {
      "error": "Index access is out of bounds",
      "op": "assert // Index access is out of bounds",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "item_offset%3#0",
        "maybe_value%7#0"
      ]
    },
    "995": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%7#0",
        "item_offset%3#0"
      ]
    },
    "996": {
      "op": "pushint 2 // 2",
      "defined_out": [
        "2",
        "index#0",
        "item_offset%3#0",
        "maybe_value%7#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%7#0",
        "item_offset%3#0",
        "2"
      ]
    },
    "998": {
      "op": "+",
      "defined_out": [
        "index#0",
        "maybe_value%7#0",
        "tmp%14#0",
        "write_offset%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%7#0",
        "write_offset%0#1"
      ]
    },
    "999": {
      "op": "frame_dig 0",
      "defined_out": [
        "index#0",
        "maybe_value%7#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "write_offset%0#1"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%7#0",
        "write_offset%0#1",
        "new_bid_receipt#0"
      ]
    },
    "1001": {
      "op": "replace3",
      "defined_out": [
        "index#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "updated_target%1#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "updated_target%1#0"
      ]
    },
    "1002": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "updated_target%1#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1004": {
      "op": "box_del",
      "defined_out": [
        "index#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "updated_target%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "updated_target%1#0",
        "{box_del}"
      ]
    },
    "1005": {
      "op": "pop",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "updated_target%1#0"
      ]
    },
    "1006": {
      "op": "box_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1007": {
      "block": "bid_after_if_else@9",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%26#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0"
      ]
    },
    "1009": {
      "op": "dup",
      "defined_out": [
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ]
    },
    "1010": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "tmp%26#0 (copy)",
        "0"
      ]
    },
    "1011": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%26#0",
        "tmp%26#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "tmp%26#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "1012": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%10#0",
        "maybe_value%10#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "maybe_value%10#0",
        "maybe_exists%10#0"
      ]
    },
    "1013": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "maybe_value%10#0"
      ]
    },
    "1014": {
      "op": "frame_dig -1",
      "defined_out": [
        "maybe_value%10#0",
        "new_bid_amount#0 (copy)",
        "tmp%26#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "maybe_value%10#0",
        "new_bid_amount#0 (copy)"
      ]
    },
    "1016": {
      "op": "btoi",
      "defined_out": [
        "maybe_value%10#0",
        "tmp%26#0",
        "tmp%27#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "maybe_value%10#0",
        "tmp%27#0"
      ]
    },
    "1017": {
      "op": "-",
      "defined_out": [
        "new_state_value%2#0",
        "tmp%26#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "new_state_value%2#0"
      ]
    },
    "1018": {
      "op": "bytec_0 // \"deposited\""
    },
    "1019": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%26#0",
        "\"deposited\"",
        "new_state_value%2#0"
      ]
    },
    "1020": {
      "op": "app_local_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1021": {
      "retsub": true,
      "op": "retsub"
    },
    "1022": {
      "block": "bid_else_body@6",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0"
      ]
    },
    "1024": {
      "op": "dup",
      "defined_out": [
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1025": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%8#0",
        "maybe_value%8#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%8#0",
        "maybe_exists%8#0"
      ]
    },
    "1026": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "maybe_value%8#0"
      ]
    },
    "1027": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "expr_value_trimmed%1#0"
      ]
    },
    "1030": {
      "op": "frame_dig 0",
      "defined_out": [
        "expr_value_trimmed%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "expr_value_trimmed%1#0",
        "new_bid_receipt#0"
      ]
    },
    "1032": {
      "op": "concat",
      "defined_out": [
        "concatenated%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0"
      ]
    },
    "1033": {
      "op": "dup",
      "defined_out": [
        "concatenated%1#0",
        "concatenated%1#0 (copy)",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "concatenated%1#0 (copy)"
      ]
    },
    "1034": {
      "op": "len",
      "defined_out": [
        "byte_len%1#0",
        "concatenated%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "byte_len%1#0"
      ]
    },
    "1035": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "byte_len%1#0",
        "concatenated%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "byte_len%1#0",
        "48"
      ]
    },
    "1036": {
      "op": "/",
      "defined_out": [
        "concatenated%1#0",
        "len_%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "len_%1#0"
      ]
    },
    "1037": {
      "op": "itob",
      "defined_out": [
        "as_bytes%1#0",
        "concatenated%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "as_bytes%1#0"
      ]
    },
    "1038": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%1#0",
        "len_16_bit%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concatenated%1#0",
        "len_16_bit%1#0"
      ]
    },
    "1041": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "len_16_bit%1#0",
        "concatenated%1#0"
      ]
    },
    "1042": {
      "op": "concat",
      "defined_out": [
        "concat_result%1#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concat_result%1#0"
      ]
    },
    "1043": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concat_result%1#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1045": {
      "op": "box_del",
      "defined_out": [
        "concat_result%1#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "{box_del}"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concat_result%1#0",
        "{box_del}"
      ]
    },
    "1046": {
      "op": "pop",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "concat_result%1#0"
      ]
    },
    "1047": {
      "op": "box_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1048": {
      "op": "b bid_after_if_else@9"
    },
    "1051": {
      "block": "bid_after_if_else@16",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0"
      ]
    },
    "1053": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0",
        "1"
      ]
    },
    "1054": {
      "op": "+",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "i#0"
      ]
    },
    "1055": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1057": {
      "op": "b bid_for_header@13"
    },
    "1060": {
      "block": "bid_after_for@17",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0"
      ]
    },
    "1061": {
      "op": "dup",
      "defined_out": [
        "index#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "smart_contracts.digital_marketplace.subroutines.find_bid_receipt%0#0",
        "index#0"
      ]
    },
    "1062": {
      "op": "frame_bury 4",
      "defined_out": [
        "found#0",
        "index#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "found#0"
      ]
    },
    "1064": {
      "op": "b bid_after_inlined_smart_contracts.digital_marketplace.subroutines.find_bid_receipt@18"
    },
    "1067": {
      "block": "bid_else_body@8",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%23#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0"
      ]
    },
    "1069": {
      "op": "dup",
      "defined_out": [
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ]
    },
    "1070": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "0"
      ]
    },
    "1071": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%23#0",
        "tmp%23#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "tmp%23#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "1072": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%9#0",
        "maybe_value%9#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "maybe_value%9#0",
        "maybe_exists%9#0"
      ]
    },
    "1073": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "maybe_value%9#0"
      ]
    },
    "1074": {
      "op": "intc 4 // 13135300",
      "defined_out": [
        "13135300",
        "maybe_value%9#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "maybe_value%9#0",
        "13135300"
      ]
    },
    "1076": {
      "op": "-",
      "defined_out": [
        "new_state_value%1#0",
        "tmp%23#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "new_state_value%1#0"
      ]
    },
    "1077": {
      "op": "bytec_0 // \"deposited\""
    },
    "1078": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%23#0",
        "\"deposited\"",
        "new_state_value%1#0"
      ]
    },
    "1079": {
      "op": "app_local_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1080": {
      "op": "pushbytes 0x0001",
      "defined_out": [
        "0x0001"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "0x0001"
      ]
    },
    "1084": {
      "op": "frame_dig 0",
      "defined_out": [
        "0x0001",
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "0x0001",
        "new_bid_receipt#0"
      ]
    },
    "1086": {
      "op": "concat",
      "defined_out": [
        "array_data%0#0",
        "new_bid_receipt#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_data%0#0"
      ]
    },
    "1087": {
      "op": "frame_dig 2",
      "defined_out": [
        "array_data%0#0",
        "new_bid_receipt#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_data%0#0",
        "tmp%14#0"
      ]
    },
    "1089": {
      "op": "dup",
      "defined_out": [
        "array_data%0#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_data%0#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1090": {
      "op": "box_del",
      "defined_out": [
        "array_data%0#0",
        "new_bid_receipt#0",
        "tmp%14#0",
        "{box_del}"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_data%0#0",
        "tmp%14#0",
        "{box_del}"
      ]
    },
    "1091": {
      "op": "pop",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "array_data%0#0",
        "tmp%14#0"
      ]
    },
    "1092": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%14#0",
        "array_data%0#0"
      ]
    },
    "1093": {
      "op": "box_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1094": {
      "op": "b bid_after_if_else@9"
    },
    "1097": {
      "block": "bid_else_body@2",
      "stack_in": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "new_bid#0"
      ],
      "op": "swap",
      "defined_out": [
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0"
      ]
    },
    "1098": {
      "op": "dup",
      "defined_out": [
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1099": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1100": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0"
      ]
    },
    "1101": {
      "op": "dup",
      "defined_out": [
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1102": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "16"
      ]
    },
    "1103": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0"
      ]
    },
    "1104": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1106": {
      "op": "len",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0"
      ]
    },
    "1107": {
      "op": "dig 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1109": {
      "op": "dig 2",
      "defined_out": [
        "item_end_offset%2#0",
        "item_start_offset%2#0",
        "item_start_offset%2#0 (copy)",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "item_end_offset%2#0",
        "maybe_value%2#0 (copy)",
        "item_start_offset%2#0 (copy)"
      ]
    },
    "1111": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "maybe_value%2#0 (copy)",
        "item_start_offset%2#0 (copy)",
        "item_end_offset%2#0"
      ]
    },
    "1113": {
      "op": "substring3",
      "defined_out": [
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%13#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "tmp%13#0"
      ]
    },
    "1114": {
      "op": "extract 2 0",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "new_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1117": {
      "op": "uncover 4",
      "defined_out": [
        "expr_value_trimmed%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "new_bid#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "expr_value_trimmed%0#0",
        "new_bid#0"
      ]
    },
    "1119": {
      "op": "concat",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0"
      ]
    },
    "1120": {
      "op": "dup",
      "defined_out": [
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1121": {
      "op": "len",
      "defined_out": [
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1122": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "byte_len%0#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "40"
      ]
    },
    "1124": {
      "op": "/",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "len_%0#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1125": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "concatenated%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1126": {
      "op": "extract 6 2",
      "defined_out": [
        "concatenated%0#0",
        "item_start_offset%2#0",
        "len_16_bit%0#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1129": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1130": {
      "op": "concat",
      "defined_out": [
        "concat_result%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "maybe_value%2#0",
        "item_start_offset%2#0",
        "concat_result%0#0"
      ]
    },
    "1131": {
      "op": "uncover 2",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "item_start_offset%2#0",
        "concat_result%0#0",
        "maybe_value%2#0"
      ]
    },
    "1133": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "concat_result%0#0",
        "item_start_offset%2#0",
        "maybe_value%2#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "item_start_offset%2#0",
        "concat_result%0#0",
        "maybe_value%2#0",
        "0"
      ]
    },
    "1134": {
      "op": "uncover 3",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "concat_result%0#0",
        "maybe_value%2#0",
        "0",
        "item_start_offset%2#0"
      ]
    },
    "1136": {
      "op": "extract3",
      "defined_out": [
        "concat_result%0#0",
        "data_up_to_item%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "concat_result%0#0",
        "data_up_to_item%1#0"
      ]
    },
    "1137": {
      "op": "swap",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "data_up_to_item%1#0",
        "concat_result%0#0"
      ]
    },
    "1138": {
      "op": "concat",
      "defined_out": [
        "tmp%2#0",
        "updated_data%1#0"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%1#0"
      ]
    },
    "1139": {
      "op": "dig 1",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%1#0",
        "tmp%2#0 (copy)"
      ]
    },
    "1141": {
      "op": "box_del",
      "defined_out": [
        "tmp%2#0",
        "updated_data%1#0",
        "{box_del}"
      ],
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%1#0",
        "{box_del}"
      ]
    },
    "1142": {
      "op": "pop",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0",
        "tmp%2#0",
        "updated_data%1#0"
      ]
    },
    "1143": {
      "op": "box_put",
      "stack_out": [
        "new_bid_receipt#0",
        "receipt#0",
        "tmp%14#0",
        "i#0",
        "index#0",
        "tmp%0#1",
        "arc4_sender#0",
        "maybe_best_bid#0"
      ]
    },
    "1144": {
      "op": "b bid_after_if_else@3"
    },
    "1147": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.is_encumbered",
      "params": {
        "bid#0": "bytes"
      },
      "block": "is_encumbered",
      "stack_in": [],
      "op": "proto 1 2"
    },
    "1150": {
      "op": "frame_dig -1",
      "defined_out": [
        "bid#0 (copy)"
      ],
      "stack_out": [
        "bid#0 (copy)"
      ]
    },
    "1152": {
      "error": "Index access is out of bounds",
      "op": "extract 0 40 // on error: Index access is out of bounds",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1155": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "\"sales\""
      ]
    },
    "1156": {
      "op": "swap",
      "stack_out": [
        "\"sales\"",
        "tmp%0#0"
      ]
    },
    "1157": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1158": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1159": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1160": {
      "op": "bury 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_exists%0#0"
      ]
    },
    "1162": {
      "op": "bz is_encumbered_bool_false@4",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1165": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1167": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1168": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0"
      ]
    },
    "1169": {
      "op": "dup",
      "defined_out": [
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "1170": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "maybe_value%1#0 (copy)",
        "16"
      ]
    },
    "1171": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "item_start_offset%0#0"
      ]
    },
    "1172": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "maybe_value%1#0 (copy)"
      ]
    },
    "1174": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "maybe_value%1#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%1#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1175": {
      "op": "substring3",
      "defined_out": [
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%4#0"
      ]
    },
    "1176": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%4#0",
        "0x0000"
      ]
    },
    "1177": {
      "op": "!=",
      "defined_out": [
        "tmp%1#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%5#0"
      ]
    },
    "1178": {
      "op": "bz is_encumbered_bool_false@4",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1181": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0"
      ]
    },
    "1183": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1184": {
      "op": "pop",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0"
      ]
    },
    "1185": {
      "op": "dup",
      "defined_out": [
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1186": {
      "op": "intc_3 // 16",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "maybe_value%2#0 (copy)",
        "16"
      ]
    },
    "1187": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%1#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "item_start_offset%1#0"
      ]
    },
    "1188": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "item_start_offset%1#0",
        "maybe_value%2#0 (copy)"
      ]
    },
    "1190": {
      "op": "len",
      "defined_out": [
        "item_end_offset%1#0",
        "item_start_offset%1#0",
        "maybe_value%2#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "maybe_value%2#0",
        "item_start_offset%1#0",
        "item_end_offset%1#0"
      ]
    },
    "1191": {
      "op": "substring3",
      "defined_out": [
        "tmp%1#0",
        "tmp%8#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%8#0"
      ]
    },
    "1192": {
      "op": "extract 2 40",
      "defined_out": [
        "tmp%1#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%9#0"
      ]
    },
    "1195": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1198": {
      "op": "txn Sender",
      "defined_out": [
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%10#0"
      ]
    },
    "1200": {
      "op": "==",
      "defined_out": [
        "tmp%1#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%11#0"
      ]
    },
    "1201": {
      "op": "bz is_encumbered_bool_false@4",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1204": {
      "op": "intc_1 // 1",
      "defined_out": [
        "and_result%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "and_result%0#0"
      ]
    },
    "1205": {
      "block": "is_encumbered_bool_merge@5",
      "stack_in": [
        "tmp%1#0",
        "and_result%0#0"
      ],
      "op": "frame_dig -1",
      "defined_out": [
        "and_result%0#0",
        "bid#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "and_result%0#0",
        "bid#0 (copy)"
      ]
    },
    "1207": {
      "op": "uncover 2"
    },
    "1209": {
      "retsub": true,
      "op": "retsub"
    },
    "1210": {
      "block": "is_encumbered_bool_false@4",
      "stack_in": [
        "tmp%1#0"
      ],
      "op": "intc_0 // 0",
      "defined_out": [
        "and_result%0#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "and_result%0#0"
      ]
    },
    "1211": {
      "op": "b is_encumbered_bool_merge@5"
    },
    "1214": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.claim_unencumbered_bids",
      "params": {},
      "block": "claim_unencumbered_bids",
      "stack_in": [],
      "op": "proto 0 0"
    },
    "1217": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1219": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0"
      ]
    },
    "1220": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "0",
        "\"deposited\""
      ]
    },
    "1221": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%0#0",
        "maybe_value%0#0"
      ],
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1222": {
      "op": "intc_0 // 0",
      "stack_out": [
        "maybe_value%0#0",
        "maybe_exists%0#0",
        "0"
      ]
    },
    "1223": {
      "op": "cover 2",
      "stack_out": [
        "0",
        "maybe_value%0#0",
        "maybe_exists%0#0"
      ]
    },
    "1225": {
      "op": "select",
      "defined_out": [
        "state_get%0#0"
      ],
      "stack_out": [
        "state_get%0#0"
      ]
    },
    "1226": {
      "op": "txn Sender",
      "defined_out": [
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "state_get%0#0",
        "tmp%1#0"
      ]
    },
    "1228": {
      "op": "bytec_0 // \"deposited\"",
      "stack_out": [
        "state_get%0#0",
        "tmp%1#0",
        "\"deposited\""
      ]
    },
    "1229": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "\"deposited\"",
        "state_get%0#0"
      ]
    },
    "1231": {
      "op": "app_local_put",
      "stack_out": []
    },
    "1232": {
      "op": "bytec_3 // \"receipt_book\"",
      "defined_out": [
        "\"receipt_book\""
      ],
      "stack_out": [
        "\"receipt_book\""
      ]
    },
    "1233": {
      "op": "txn Sender",
      "defined_out": [
        "\"receipt_book\"",
        "tmp%2#0"
      ],
      "stack_out": [
        "\"receipt_book\"",
        "tmp%2#0"
      ]
    },
    "1235": {
      "op": "concat",
      "defined_out": [
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%3#0"
      ]
    },
    "1236": {
      "op": "box_get",
      "defined_out": [
        "bid_receipts#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "maybe_exists%1#0"
      ]
    },
    "1237": {
      "op": "swap",
      "stack_out": [
        "maybe_exists%1#0",
        "bid_receipts#0"
      ]
    },
    "1238": {
      "op": "dup",
      "stack_out": [
        "maybe_exists%1#0",
        "bid_receipts#0",
        "bid_receipts#0 (copy)"
      ]
    },
    "1239": {
      "op": "uncover 2",
      "defined_out": [
        "bid_receipts#0",
        "maybe_exists%1#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "bid_receipts#0",
        "maybe_exists%1#0"
      ]
    },
    "1241": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "bid_receipts#0",
        "bid_receipts#0"
      ]
    },
    "1242": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "bid_receipts#0",
        "encumbered_bid_receipts#0"
      ]
    },
    "1243": {
      "op": "swap",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "bid_receipts#0"
      ]
    },
    "1244": {
      "op": "intc_0 // 0",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "bid_receipts#0",
        "0"
      ]
    },
    "1245": {
      "op": "extract_uint16",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0"
      ]
    },
    "1246": {
      "op": "intc_0 // 0",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1247": {
      "block": "claim_unencumbered_bids_for_header@1",
      "stack_in": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "i#0"
      ]
    },
    "1249": {
      "op": "frame_dig 2",
      "defined_out": [
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "i#0",
        "tmp%4#0"
      ]
    },
    "1251": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1252": {
      "op": "bz claim_unencumbered_bids_after_for@7",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1255": {
      "op": "frame_dig 0",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "bid_receipts#0"
      ]
    },
    "1257": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1260": {
      "op": "frame_dig 3",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "1262": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0",
        "48"
      ]
    },
    "1263": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "item_offset%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1264": {
      "op": "intc_2 // 48",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1265": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1266": {
      "op": "dup",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "1267": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.is_encumbered",
      "op": "callsub is_encumbered",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "is_encumbered%0#0",
        "is_encumbered%1#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "is_encumbered%0#0",
        "is_encumbered%1#0"
      ]
    },
    "1270": {
      "op": "pop",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "is_encumbered%0#0"
      ]
    },
    "1271": {
      "op": "bz claim_unencumbered_bids_else_body@4",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0"
      ]
    },
    "1274": {
      "op": "frame_dig 1",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "encumbered_bid_receipts#0"
      ]
    },
    "1276": {
      "op": "extract 2 0",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "expr_value_trimmed%0#0",
        "i#0",
        "tmp%4#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "expr_value_trimmed%0#0"
      ]
    },
    "1279": {
      "op": "swap",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "expr_value_trimmed%0#0",
        "tmp%5#0"
      ]
    },
    "1280": {
      "op": "concat",
      "defined_out": [
        "bid_receipts#0",
        "concatenated%0#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0"
      ]
    },
    "1281": {
      "op": "dup",
      "defined_out": [
        "bid_receipts#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "concatenated%0#0 (copy)"
      ]
    },
    "1282": {
      "op": "len",
      "defined_out": [
        "bid_receipts#0",
        "byte_len%0#0",
        "concatenated%0#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0"
      ]
    },
    "1283": {
      "op": "intc_2 // 48",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "byte_len%0#0",
        "48"
      ]
    },
    "1284": {
      "op": "/",
      "defined_out": [
        "bid_receipts#0",
        "concatenated%0#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "len_%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "len_%0#0"
      ]
    },
    "1285": {
      "op": "itob",
      "defined_out": [
        "as_bytes%0#0",
        "bid_receipts#0",
        "concatenated%0#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "as_bytes%0#0"
      ]
    },
    "1286": {
      "op": "extract 6 2",
      "defined_out": [
        "bid_receipts#0",
        "concatenated%0#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "len_16_bit%0#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "concatenated%0#0",
        "len_16_bit%0#0"
      ]
    },
    "1289": {
      "op": "swap",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "len_16_bit%0#0",
        "concatenated%0#0"
      ]
    },
    "1290": {
      "op": "concat",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "encumbered_bid_receipts#0"
      ]
    },
    "1291": {
      "op": "frame_bury 1",
      "defined_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "i#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1293": {
      "block": "claim_unencumbered_bids_after_if_else@5",
      "stack_in": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ],
      "op": "frame_dig 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "i#0"
      ]
    },
    "1295": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1296": {
      "op": "+",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "i#0"
      ]
    },
    "1297": {
      "op": "frame_bury 3",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1299": {
      "op": "b claim_unencumbered_bids_for_header@1"
    },
    "1302": {
      "block": "claim_unencumbered_bids_else_body@4",
      "stack_in": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0"
      ]
    },
    "1304": {
      "op": "dup",
      "defined_out": [
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ]
    },
    "1305": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0"
      ]
    },
    "1306": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%7#0",
        "tmp%7#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0",
        "tmp%7#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "1307": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%2#0",
        "maybe_value%2#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0",
        "maybe_value%2#0",
        "maybe_exists%2#0"
      ]
    },
    "1308": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%5#0",
        "tmp%7#0",
        "maybe_value%2#0"
      ]
    },
    "1309": {
      "op": "uncover 2",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%7#0",
        "maybe_value%2#0",
        "tmp%5#0"
      ]
    },
    "1311": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "maybe_value%2#0",
        "tmp%5#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%7#0",
        "maybe_value%2#0",
        "tmp%5#0",
        "40"
      ]
    },
    "1313": {
      "op": "extract_uint64",
      "defined_out": [
        "maybe_value%2#0",
        "tmp%10#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%7#0",
        "maybe_value%2#0",
        "tmp%10#0"
      ]
    },
    "1314": {
      "op": "+",
      "defined_out": [
        "new_state_value%0#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%7#0",
        "new_state_value%0#0"
      ]
    },
    "1315": {
      "op": "bytec_0 // \"deposited\""
    },
    "1316": {
      "op": "swap",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%7#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "1317": {
      "op": "app_local_put",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1318": {
      "op": "b claim_unencumbered_bids_after_if_else@5"
    },
    "1321": {
      "block": "claim_unencumbered_bids_after_for@7",
      "stack_in": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "encumbered_bid_receipts#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "encumbered_bid_receipts#0"
      ]
    },
    "1323": {
      "op": "bytec_2 // 0x0000",
      "defined_out": [
        "0x0000",
        "encumbered_bid_receipts#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "encumbered_bid_receipts#0",
        "0x0000"
      ]
    },
    "1324": {
      "op": "!=",
      "defined_out": [
        "encumbered_bid_receipts#0",
        "tmp%11#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%11#0"
      ]
    },
    "1325": {
      "op": "bz claim_unencumbered_bids_else_body@9",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1328": {
      "op": "bytec_3 // \"receipt_book\"",
      "defined_out": [
        "\"receipt_book\"",
        "encumbered_bid_receipts#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "\"receipt_book\""
      ]
    },
    "1329": {
      "op": "txn Sender",
      "defined_out": [
        "\"receipt_book\"",
        "encumbered_bid_receipts#0",
        "tmp%12#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "\"receipt_book\"",
        "tmp%12#0"
      ]
    },
    "1331": {
      "op": "concat",
      "defined_out": [
        "encumbered_bid_receipts#0",
        "tmp%13#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "1332": {
      "op": "dup",
      "defined_out": [
        "encumbered_bid_receipts#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%13#0",
        "tmp%13#0 (copy)"
      ]
    },
    "1333": {
      "op": "box_del",
      "defined_out": [
        "encumbered_bid_receipts#0",
        "tmp%13#0",
        "{box_del}"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%13#0",
        "{box_del}"
      ]
    },
    "1334": {
      "op": "pop",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%13#0"
      ]
    },
    "1335": {
      "op": "frame_dig 1",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%13#0",
        "encumbered_bid_receipts#0"
      ]
    },
    "1337": {
      "op": "box_put",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1338": {
      "retsub": true,
      "op": "retsub"
    },
    "1339": {
      "block": "claim_unencumbered_bids_else_body@9",
      "stack_in": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ],
      "op": "txn Sender",
      "defined_out": [
        "tmp%14#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0"
      ]
    },
    "1341": {
      "op": "dup",
      "defined_out": [
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ]
    },
    "1342": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "0"
      ]
    },
    "1343": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "tmp%14#0",
        "tmp%14#0 (copy)"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "tmp%14#0 (copy)",
        "0",
        "\"deposited\""
      ]
    },
    "1344": {
      "op": "app_local_get_ex",
      "defined_out": [
        "maybe_exists%3#0",
        "maybe_value%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "maybe_value%3#0",
        "maybe_exists%3#0"
      ]
    },
    "1345": {
      "error": "check self.deposited exists for account",
      "op": "assert // check self.deposited exists for account",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "maybe_value%3#0"
      ]
    },
    "1346": {
      "op": "intc 4 // 13135300",
      "defined_out": [
        "13135300",
        "maybe_value%3#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "maybe_value%3#0",
        "13135300"
      ]
    },
    "1348": {
      "op": "+",
      "defined_out": [
        "new_state_value%1#0",
        "tmp%14#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "new_state_value%1#0"
      ]
    },
    "1349": {
      "op": "bytec_0 // \"deposited\""
    },
    "1350": {
      "op": "swap",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%14#0",
        "\"deposited\"",
        "new_state_value%1#0"
      ]
    },
    "1351": {
      "op": "app_local_put",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1352": {
      "op": "bytec_3 // \"receipt_book\"",
      "defined_out": [
        "\"receipt_book\""
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "\"receipt_book\""
      ]
    },
    "1353": {
      "op": "txn Sender",
      "defined_out": [
        "\"receipt_book\"",
        "tmp%16#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "\"receipt_book\"",
        "tmp%16#0"
      ]
    },
    "1355": {
      "op": "concat",
      "defined_out": [
        "tmp%17#0"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "tmp%17#0"
      ]
    },
    "1356": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0",
        "{box_del}"
      ]
    },
    "1357": {
      "op": "pop",
      "stack_out": [
        "bid_receipts#0",
        "encumbered_bid_receipts#0",
        "tmp%4#0",
        "i#0"
      ]
    },
    "1358": {
      "retsub": true,
      "op": "retsub"
    },
    "1359": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.get_total_and_unencumbered_bids",
      "params": {},
      "block": "get_total_and_unencumbered_bids",
      "stack_in": [],
      "op": "proto 0 1"
    },
    "1362": {
      "op": "pushbytes \"\"",
      "stack_out": [
        "tmp%5#0"
      ]
    },
    "1364": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9"
      ]
    },
    "1365": {
      "op": "intc_0 // 0"
    },
    "1366": {
      "op": "dup"
    },
    "1367": {
      "op": "bytec_3 // \"receipt_book\""
    },
    "1368": {
      "op": "txn Sender",
      "defined_out": [
        "\"receipt_book\"",
        "tmp%0#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "\"receipt_book\"",
        "tmp%0#0"
      ]
    },
    "1370": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "tmp%1#0"
      ]
    },
    "1371": {
      "op": "box_get",
      "defined_out": [
        "bid_receipts#0",
        "maybe_exists%0#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "maybe_exists%0#0"
      ]
    },
    "1372": {
      "op": "swap",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "maybe_exists%0#0",
        "bid_receipts#0"
      ]
    },
    "1373": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "maybe_exists%0#0",
        "bid_receipts#0",
        "bid_receipts#0 (copy)"
      ]
    },
    "1374": {
      "op": "uncover 2",
      "defined_out": [
        "bid_receipts#0",
        "maybe_exists%0#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "bid_receipts#0",
        "maybe_exists%0#0"
      ]
    },
    "1376": {
      "error": "check self.receipt_book entry exists",
      "op": "assert // check self.receipt_book entry exists",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "bid_receipts#0"
      ]
    },
    "1377": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "bid_receipts#0",
        "0"
      ]
    },
    "1378": {
      "op": "extract_uint16",
      "defined_out": [
        "bid_receipts#0",
        "tmp%2#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0"
      ]
    },
    "1379": {
      "op": "intc_0 // 0",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1380": {
      "block": "get_total_and_unencumbered_bids_for_header@1",
      "stack_in": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 6",
      "defined_out": [
        "i#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1382": {
      "op": "frame_dig 5",
      "defined_out": [
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "tmp%2#0"
      ]
    },
    "1384": {
      "op": "<",
      "defined_out": [
        "continue_looping%0#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "continue_looping%0#0"
      ]
    },
    "1385": {
      "op": "bz get_total_and_unencumbered_bids_after_for@6",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1388": {
      "op": "frame_dig 4",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "bid_receipts#0"
      ]
    },
    "1390": {
      "op": "extract 2 0",
      "defined_out": [
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "array_head_and_tail%0#0"
      ]
    },
    "1393": {
      "op": "frame_dig 6",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0"
      ]
    },
    "1395": {
      "op": "intc_2 // 48",
      "defined_out": [
        "48",
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "array_head_and_tail%0#0",
        "i#0",
        "48"
      ]
    },
    "1396": {
      "op": "*",
      "defined_out": [
        "array_head_and_tail%0#0",
        "bid_receipts#0",
        "i#0",
        "item_offset%0#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0"
      ]
    },
    "1397": {
      "op": "intc_2 // 48",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "array_head_and_tail%0#0",
        "item_offset%0#0",
        "48"
      ]
    },
    "1398": {
      "error": "Index access is out of bounds",
      "op": "extract3 // on error: Index access is out of bounds",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1399": {
      "op": "dup",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ]
    },
    "1400": {
      "op": "pushint 40 // 40",
      "defined_out": [
        "40",
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%3#0 (copy)"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%3#0 (copy)",
        "40"
      ]
    },
    "1402": {
      "op": "extract_uint64",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1403": {
      "op": "dup",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0",
        "tmp%5#0"
      ]
    },
    "1404": {
      "op": "frame_bury 0",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0"
      ]
    },
    "1406": {
      "op": "frame_dig 2",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0",
        "total_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "tmp%5#0",
        "total_bids#0"
      ]
    },
    "1408": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0",
        "total_bids#0"
      ]
    },
    "1409": {
      "op": "frame_bury 2",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%3#0",
        "tmp%5#0",
        "total_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "tmp%3#0"
      ]
    },
    "1411": {
      "callsub": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.is_encumbered",
      "op": "callsub is_encumbered",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "is_encumbered%0#0",
        "is_encumbered%1#0",
        "tmp%2#0",
        "tmp%5#0",
        "total_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "is_encumbered%0#0",
        "is_encumbered%1#0"
      ]
    },
    "1414": {
      "op": "pop",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "is_encumbered%0#0"
      ]
    },
    "1415": {
      "op": "frame_dig 3",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "is_encumbered%0#0",
        "tmp%2#0",
        "tmp%5#0",
        "total_bids#0",
        "unencumbered_bids#9"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "is_encumbered%0#0",
        "unencumbered_bids#9"
      ]
    },
    "1417": {
      "op": "frame_bury 1",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "is_encumbered%0#0",
        "tmp%2#0",
        "tmp%5#0",
        "total_bids#0",
        "unencumbered_bids#9"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "is_encumbered%0#0"
      ]
    },
    "1419": {
      "op": "bnz get_total_and_unencumbered_bids_after_if_else@4",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1422": {
      "op": "frame_dig 3",
      "defined_out": [
        "bid_receipts#0",
        "i#0",
        "tmp%2#0",
        "tmp%5#0",
        "total_bids#0",
        "unencumbered_bids#0",
        "unencumbered_bids#9"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "unencumbered_bids#0"
      ]
    },
    "1424": {
      "op": "frame_dig 0",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "unencumbered_bids#0",
        "tmp%5#0"
      ]
    },
    "1426": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "unencumbered_bids#9"
      ]
    },
    "1427": {
      "op": "frame_bury 1",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1429": {
      "block": "get_total_and_unencumbered_bids_after_if_else@4",
      "stack_in": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 1",
      "defined_out": [
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "unencumbered_bids#0"
      ]
    },
    "1431": {
      "op": "frame_bury 3",
      "defined_out": [
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1433": {
      "op": "frame_dig 6",
      "defined_out": [
        "i#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1435": {
      "op": "intc_1 // 1",
      "defined_out": [
        "1",
        "i#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "i#0",
        "1"
      ]
    },
    "1436": {
      "op": "+",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "i#0"
      ]
    },
    "1437": {
      "op": "frame_bury 6",
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ]
    },
    "1439": {
      "op": "b get_total_and_unencumbered_bids_for_header@1"
    },
    "1442": {
      "block": "get_total_and_unencumbered_bids_after_for@6",
      "stack_in": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0"
      ],
      "op": "frame_dig 2",
      "defined_out": [
        "total_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "total_bids#0"
      ]
    },
    "1444": {
      "op": "itob",
      "defined_out": [
        "total_bids#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0"
      ]
    },
    "1445": {
      "op": "frame_dig 3",
      "defined_out": [
        "total_bids#0",
        "unencumbered_bids#0",
        "val_as_bytes%0#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0",
        "unencumbered_bids#0"
      ]
    },
    "1447": {
      "op": "itob",
      "defined_out": [
        "total_bids#0",
        "unencumbered_bids#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "val_as_bytes%0#0",
        "val_as_bytes%1#0"
      ]
    },
    "1448": {
      "op": "concat",
      "defined_out": [
        "encoded_tuple_buffer%2#0",
        "total_bids#0",
        "unencumbered_bids#0"
      ],
      "stack_out": [
        "tmp%5#0",
        "unencumbered_bids#9",
        "total_bids#0",
        "unencumbered_bids#0",
        "bid_receipts#0",
        "tmp%2#0",
        "i#0",
        "encoded_tuple_buffer%2#0"
      ]
    },
    "1449": {
      "op": "frame_bury 0"
    },
    "1451": {
      "retsub": true,
      "op": "retsub"
    },
    "1452": {
      "subroutine": "smart_contracts.digital_marketplace.contract.DigitalMarketplace.accept_bid",
      "params": {
        "asset#0": "bytes"
      },
      "block": "accept_bid",
      "stack_in": [],
      "op": "proto 1 0"
    },
    "1455": {
      "op": "txn Sender",
      "defined_out": [
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0"
      ]
    },
    "1457": {
      "op": "frame_dig -1",
      "defined_out": [
        "asset#0 (copy)",
        "tmp%0#0"
      ],
      "stack_out": [
        "tmp%0#0",
        "asset#0 (copy)"
      ]
    },
    "1459": {
      "op": "concat",
      "defined_out": [
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0"
      ]
    },
    "1460": {
      "op": "bytec_1 // \"sales\"",
      "defined_out": [
        "\"sales\"",
        "sale_key#0"
      ],
      "stack_out": [
        "sale_key#0",
        "\"sales\""
      ]
    },
    "1461": {
      "op": "swap",
      "stack_out": [
        "\"sales\"",
        "sale_key#0"
      ]
    },
    "1462": {
      "op": "concat",
      "defined_out": [
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1463": {
      "op": "dup",
      "defined_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ],
      "stack_out": [
        "tmp%1#0",
        "tmp%1#0 (copy)"
      ]
    },
    "1464": {
      "op": "box_get",
      "defined_out": [
        "maybe_exists%0#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "maybe_exists%0#0"
      ]
    },
    "1465": {
      "error": "check self.sales entry exists",
      "op": "assert // check self.sales entry exists",
      "stack_out": [
        "tmp%1#0",
        "sale#0"
      ]
    },
    "1466": {
      "op": "dup",
      "defined_out": [
        "sale#0",
        "sale#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "sale#0 (copy)"
      ]
    },
    "1467": {
      "op": "intc_3 // 16",
      "defined_out": [
        "16",
        "sale#0",
        "sale#0 (copy)",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "sale#0 (copy)",
        "16"
      ]
    },
    "1468": {
      "op": "extract_uint16",
      "defined_out": [
        "item_start_offset%0#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "item_start_offset%0#0"
      ]
    },
    "1469": {
      "op": "dig 1",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "item_start_offset%0#0",
        "sale#0 (copy)"
      ]
    },
    "1471": {
      "op": "len",
      "defined_out": [
        "item_end_offset%0#0",
        "item_start_offset%0#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1472": {
      "op": "dig 2",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "item_start_offset%0#0",
        "item_end_offset%0#0",
        "sale#0 (copy)"
      ]
    },
    "1474": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "sale#0 (copy)",
        "item_start_offset%0#0",
        "item_end_offset%0#0"
      ]
    },
    "1476": {
      "op": "substring3",
      "defined_out": [
        "sale#0",
        "tmp%1#0",
        "tmp%2#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "tmp%2#0"
      ]
    },
    "1477": {
      "op": "extract 2 40",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0"
      ]
    },
    "1480": {
      "op": "txn Sender",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%4#0"
      ]
    },
    "1482": {
      "op": "intc_0 // 0",
      "defined_out": [
        "0",
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%4#0",
        "0"
      ]
    },
    "1483": {
      "op": "bytec_0 // \"deposited\"",
      "defined_out": [
        "\"deposited\"",
        "0",
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%4#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%4#0",
        "0",
        "\"deposited\""
      ]
    },
    "1484": {
      "op": "app_local_get_ex",
      "defined_out": [
        "current_best_bid#0",
        "maybe_exists%1#0",
        "maybe_value%1#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1485": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "maybe_value%1#0",
        "maybe_exists%1#0",
        "0"
      ]
    },
    "1486": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "0",
        "maybe_value%1#0",
        "maybe_exists%1#0"
      ]
    },
    "1488": {
      "op": "select",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "state_get%0#0"
      ]
    },
    "1489": {
      "op": "dig 1",
      "defined_out": [
        "current_best_bid#0",
        "current_best_bid#0 (copy)",
        "sale#0",
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "state_get%0#0",
        "current_best_bid#0 (copy)"
      ]
    },
    "1491": {
      "op": "pushint 32 // 32",
      "defined_out": [
        "32",
        "current_best_bid#0",
        "current_best_bid#0 (copy)",
        "sale#0",
        "state_get%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "state_get%0#0",
        "current_best_bid#0 (copy)",
        "32"
      ]
    },
    "1493": {
      "op": "extract_uint64",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "state_get%0#0",
        "tmp%1#0",
        "tmp%6#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "state_get%0#0",
        "tmp%6#0"
      ]
    },
    "1494": {
      "op": "+",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%7#0"
      ]
    },
    "1495": {
      "op": "pushint 5 // 5",
      "defined_out": [
        "5",
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%7#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%7#0",
        "5"
      ]
    },
    "1497": {
      "callsub": "smart_contracts.digital_marketplace.subroutines.sales_box_mbr",
      "op": "callsub sales_box_mbr",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1500": {
      "op": "txn Sender",
      "defined_out": [
        "current_best_bid#0",
        "sale#0",
        "tmp%1#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%7#0",
        "tmp%9#0",
        "tmp%10#0"
      ]
    },
    "1502": {
      "op": "cover 2",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%10#0",
        "tmp%7#0",
        "tmp%9#0"
      ]
    },
    "1504": {
      "op": "+",
      "defined_out": [
        "current_best_bid#0",
        "new_state_value%0#0",
        "sale#0",
        "tmp%1#0",
        "tmp%10#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%10#0",
        "new_state_value%0#0"
      ]
    },
    "1505": {
      "op": "bytec_0 // \"deposited\""
    },
    "1506": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "tmp%10#0",
        "\"deposited\"",
        "new_state_value%0#0"
      ]
    },
    "1507": {
      "op": "app_local_put",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0"
      ]
    },
    "1508": {
      "op": "itxn_begin"
    },
    "1509": {
      "op": "frame_dig -1",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "asset#0 (copy)"
      ]
    },
    "1511": {
      "op": "btoi",
      "defined_out": [
        "current_best_bid#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "current_best_bid#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1512": {
      "op": "swap",
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "current_best_bid#0"
      ]
    },
    "1513": {
      "error": "Index access is out of bounds",
      "op": "extract 0 32 // on error: Index access is out of bounds",
      "defined_out": [
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0",
        "sale#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "sale#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1516": {
      "op": "uncover 2",
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0",
        "sale#0"
      ]
    },
    "1518": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0",
        "sale#0",
        "0"
      ]
    },
    "1519": {
      "op": "extract_uint64",
      "defined_out": [
        "inner_txn_params%0%%param_AssetAmount_idx_0#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0",
        "inner_txn_params%0%%param_AssetAmount_idx_0#0"
      ]
    },
    "1520": {
      "op": "itxn_field AssetAmount",
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0",
        "reinterpret_bytes[32]%0#0"
      ]
    },
    "1522": {
      "op": "itxn_field AssetReceiver",
      "stack_out": [
        "tmp%1#0",
        "inner_txn_params%0%%param_XferAsset_idx_0#0"
      ]
    },
    "1524": {
      "op": "itxn_field XferAsset",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1526": {
      "op": "pushint 4 // axfer",
      "defined_out": [
        "axfer",
        "tmp%1#0"
      ],
      "stack_out": [
        "tmp%1#0",
        "axfer"
      ]
    },
    "1528": {
      "op": "itxn_field TypeEnum",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1530": {
      "op": "intc_0 // 0",
      "stack_out": [
        "tmp%1#0",
        "0"
      ]
    },
    "1531": {
      "op": "itxn_field Fee",
      "stack_out": [
        "tmp%1#0"
      ]
    },
    "1533": {
      "op": "itxn_submit"
    },
    "1534": {
      "op": "box_del",
      "defined_out": [
        "{box_del}"
      ],
      "stack_out": [
        "{box_del}"
      ]
    },
    "1535": {
      "op": "pop",
      "stack_out": []
    },
    "1536": {
      "retsub": true,
      "op": "retsub"
    }
  }
}